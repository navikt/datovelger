{"version":3,"sources":["dev/components/svg/NAVLogo.tsx","dev/utils/bemUtils.ts","dev/components/box/Box.tsx","dev/components/page-intro/PageIntro.tsx","datovelger/common/DomEventContainer.tsx","datovelger/utils/dateFormatUtils.ts","datovelger/Datoinput.tsx","datovelger/tekster.ts","datovelger/elementer/KalenderIkon.tsx","datovelger/elementer/KalenderKnapp.tsx","datovelger/elementer/KalenderPortal.tsx","datovelger/utils/index.ts","datovelger/kalender/localeUtils.ts","datovelger/elementer/ChevronSvg.tsx","datovelger/kalender/YearSelector.tsx","datovelger/kalender/Navbar.tsx","datovelger/kalender/Kalender.tsx","datovelger/utils/kalenderFokusUtils.ts","datovelger/Datovelger.tsx","dev/eksempler/DatovelgerEksempel.tsx","dev/Intro.tsx","dev/config/routeConfig.tsx","dev/components/left-menu/LeftMenu.tsx","dev/DevContent.tsx","dev/DevPage.tsx","App.tsx","index.tsx"],"names":["NAVLogo","props","className","width","viewBox","fill","fillRule","d","bemUtils","cls","block","element","e","m","modifier","modifierConditional","condition","undefined","child","c","classNames","bem","bemHelper","Box","margin","padBottom","textAlignCenter","children","PageIntro","title","tag","DomEventContainer","divRef","useRef","active","onBlur","onKeyDown","onFocus","tabIndex","useState","isActive","setIsActive","useEffect","handleDocumentKeyDown","evt","source","keyCode","window","addEventListener","removeEventListener","ref","divContainer","current","setTimeout","node","activeElement","document","contains","ISO_DATE_STRING_FORMAT","moment","HTML5_FMT","DATE","stringToUTCDate","dateString","format","trim","length","utc","isValid","toDate","dateToInputDateString","date","dateToISODateString","toString","ISODateStringToUTCDate","isoDateString","ISODateStringToInputDateString","stringValue","Datoinput","React","forwardRef","valgtDato","inputProps","placeholder","disabled","onDateChange","onInputChange","value","setValue","inputDateString","triggerValueChange","inputValue","InputDateStringToISODateString","autoComplete","autoCorrect","pattern","type","inputMode","maxLength","onChange","target","key","preventDefault","Tekster","KalenderIkon","height","role","aria-hidden","stroke","KalenderKnapp","button","this","focus","onClick","erÅpen","aria-label","aria-expanded","Component","KalenderPortal","plassering","classnames","getUtilgjengeligeDager","avgrensninger","ugyldigeDager","ugyldigeTidsperioder","map","t","from","fom","to","tom","filter","minDato","maksDato","helgedager","daysOfWeek","helgedagerIkkeTillatt","after","before","getDefaultMåned","dato","dayPickerProps","initialMonth","idag","isAfter","kalenderLocaleUtils","formatDay","day","locale","formatMonthTitle","formatWeekdayLong","localeData","weekdays","formatWeekdayShort","substr","getMonths","months","i","push","month","getFirstDayOfWeek","firstDayOfWeek","formatDate","parseDate","Chevron","rotation","retning","getRotationTransform","style","transform","YearSelector","yearSelect","monthSelect","bind","onYearChange","getYear","getMonth","parseInt","min","max","Date","getFullYear","year","newDate","isBefore","defaultMonth","add","localeUtils","monthOptions","monthNames","maks","options","label","getAvailableMonths","years","minYear","Math","maxYear","mndSelectId","guid","yearSelectId","showYearSelect","htmlFor","id","name","NavbarKnapp","måned","aria-disabled","lagCaption","defaultMåned","Navbar","nextProps","byttMåned","visÅrVelger","forrigeMåned","nesteMåned","forrigeErDisabled","endOf","nesteErDisabled","startOf","mnd","fokusElement","stopPropagation","aria-live","Kalender","displayMonth","setDisplayMonth","visUkenumre","utilgjengeligeDager","kanVelgeUgyldigDato","onLukk","onVelgDag","onChangeMonth","navFocusElement","calendar","kalender","el","querySelector","getMånedFokusDomElement","fokuserPåMåned","innstillinger","navbarElement","captionElement","minDate","maxDate","showWeekNumbers","focusTrapOptions","clickOutsideDeactivates","onDeactivate","fromMonth","toMonth","canChangeMonth","selectedDays","onDayClick","modifiers","onMonthChange","disabledDays","Datovelger","input","datoErGyldig","kalenderProps","activeMonth","setActiveMonth","calendarIsVisible","setCalendarIsVisible","dateInput","dateInputProps","ariaLabel","ariaDescribedby","setDate","closeCalender","DatovelgerEksempel","setDato","Intro","marginBottom","routes","path","renderContent","isActiveRoute","pathname","indexOf","lenkeBem","LeftMenu","useHistory","location","route","DevContent","routeConfig","find","f","getRouteConfig","maxWidth","DevPage","require","App","Modal","setAppElement","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2b66067c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NAVLogo(props) {\n    return (\n        <svg className=\"prefix__navLogo\" width={90} viewBox=\"0 0 269 169\" {...props}>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <path\n                    fill=\"#C30000\"\n                    d=\"M125.31 168.942c-46.642 0-84.46-37.817-84.46-84.465C40.85 37.824 78.667 0 125.31 0c46.657 0 84.48 37.824 84.48 84.477 0 46.648-37.823 84.465-84.48 84.465zM0 121.359l17.265-42.73h16.589l-17.243 42.73zm213.044 0l17.044-42.73h9.044l-17.043 42.73zM246.564 121.359l17.04-42.73h4.803l-17.043 42.731z\"\n                />\n                <path\n                    fill=\"#FEFEFE\"\n                    d=\"M197.36 78.63h-15.016s-1.035 0-1.4.914l-8.31 25.439-8.304-25.44c-.366-.913-1.407-.913-1.407-.913h-28.872c-.625 0-1.149.522-1.149 1.143v8.639c0-6.853-7.292-9.782-11.562-9.782-9.562 0-15.963 6.298-17.956 15.873-.108-6.352-.636-8.628-2.347-10.96-.786-1.141-1.922-2.101-3.159-2.895-2.547-1.492-4.834-2.018-9.749-2.018h-5.77s-1.044 0-1.412.914l-5.25 13.013V79.773c0-.621-.52-1.143-1.145-1.143H61.198s-1.03 0-1.406.914l-5.459 13.53s-.545 1.354.701 1.354h5.133v25.784c0 .64.504 1.147 1.147 1.147h13.238c.624 0 1.144-.507 1.144-1.147V94.428h5.16c2.961 0 3.588.08 4.74.618.694.262 1.32.792 1.66 1.403.698 1.314.873 2.892.873 7.545v16.218c0 .64.514 1.147 1.15 1.147h12.687s1.434 0 2.001-1.416l2.812-6.95c3.74 5.237 9.893 8.366 17.541 8.366h1.671s1.443 0 2.014-1.416l4.897-12.128v12.397c0 .64.524 1.147 1.15 1.147h12.951s1.43 0 2.003-1.416c0 0 5.18-12.861 5.2-12.958h.008c.2-1.07-1.153-1.07-1.153-1.07h-4.623V83.847l14.545 36.096c.568 1.416 2 1.416 2 1.416h15.301s1.44 0 2.008-1.416l16.125-39.93c.558-1.383-1.057-1.383-1.057-1.383zm-64.458 27.285h-8.7c-3.463 0-6.28-2.804-6.28-6.271 0-3.461 2.817-6.283 6.28-6.283h2.433c3.454 0 6.267 2.822 6.267 6.283v6.27z\"\n                />\n            </g>\n        </svg>\n    );\n}\n\nexport default NAVLogo;\n","import classNames from 'classnames';\n\nconst bemUtils = (cls: string) => ({\n    block: cls,\n    element: (e?: string, m?: string) => `${cls}__${e}${m ? ` ${cls}__${e}--${m}` : ''}`,\n    modifier: (m?: string) => `${cls}--${m}`,\n    modifierConditional: (m: string | undefined, condition: boolean | undefined) =>\n        condition === true && m !== undefined ? `${cls}--${m}` : undefined,\n    child: (c: string) => bemUtils(bemUtils(cls).element(c)),\n    classNames\n});\n\nexport default bemUtils;\n","import React from 'react';\nimport bemHelper from '../../utils/bemUtils';\nimport './box.less';\n\ntype BoxMargin = 's' | 'm' | 'l' | 'xl' | 'xxl' | 'xxxl' | 'none';\n\ninterface BoxProps {\n    margin?: BoxMargin;\n    padBottom?: BoxMargin;\n    textAlignCenter?: boolean;\n    className?: string;\n}\n\nconst bem = bemHelper('box');\n\nconst Box: React.FunctionComponent<BoxProps> = ({ margin, padBottom, className, textAlignCenter, children }) => {\n    const classNames = bem.classNames(\n        bem.block,\n        bem.modifierConditional(margin, margin !== undefined),\n        bem.modifierConditional(`bottom-${padBottom}`, padBottom !== undefined),\n        {\n            [bem.modifier('textAlignCenter')]: textAlignCenter,\n            [`${className}`]: className !== undefined\n        }\n    );\n    return <div className={classNames}>{children}</div>;\n};\n\nexport default Box;\n","import React from 'react';\nimport { Ingress, Undertittel, } from 'nav-frontend-typografi';\nimport Box from '../box/Box';\n\ninterface Props {\n    title: string;\n}\n\nconst PageIntro: React.FunctionComponent<Props> = ({ title, children }) => (\n    <>\n        <Box margin=\"m\">\n            <Box>\n                <Undertittel>{title}</Undertittel>\n            </Box>\n            {children && (\n                <Box padBottom=\"xl\">\n                    <Ingress tag=\"div\">{children}</Ingress>\n                </Box>\n            )}\n        </Box>\n    </>\n);\n\nexport default PageIntro;\n","import React, { FocusEvent, KeyboardEvent, useEffect, useRef, useState } from 'react';\n\nexport interface ContainerBlurEvent {\n    source: 'esc' | 'blur';\n}\n\nexport function contains(node: HTMLElement, child: Element) {\n    return node === child || node.contains(child);\n}\n\nexport interface Props {\n    onKeyDown?: (evt: React.KeyboardEvent<HTMLDivElement>) => void;\n    onBlur?: (evt: React.FocusEvent<HTMLDivElement> | { source: string }) => void;\n    onFocus?: (evt: React.FocusEvent<HTMLDivElement>) => void;\n    active?: boolean;\n    className?: string;\n    tabIndex?: number;\n    children: React.ReactNode;\n}\n\nconst DomEventContainer = (props: Props) => {\n    const divRef = useRef<HTMLDivElement>(null);\n    const { active, onBlur, onKeyDown, onFocus, className, tabIndex, children } = props;\n\n    const [isActive, setIsActive] = useState<boolean>(active === true);\n\n    useEffect(() => {\n        const blur = (source: string) => {\n            if (onBlur) {\n                onBlur({\n                    source,\n                });\n            }\n        };\n        const handleDocumentKeyDown = (evt?: any) => {\n            if (evt && evt.keyCode === 27) {\n                blur('esc');\n            }\n        };\n        const startEventListening = () => {\n            window.addEventListener('keydown', handleDocumentKeyDown);\n        };\n\n        const stopEventListening = () => {\n            window.removeEventListener('keydown', handleDocumentKeyDown);\n        };\n        if (active !== isActive) {\n            if (active === true) {\n                startEventListening();\n                setIsActive(true);\n            } else {\n                stopEventListening();\n                setIsActive(false);\n            }\n        }\n    }, [active, setIsActive, isActive, onBlur]);\n\n    const handleOnBlur = () => {\n        const divContainer = divRef.current || null;\n        if (divContainer === null) {\n            return;\n        }\n        setTimeout(() => {\n            const activeElement = window.document.activeElement;\n            const isChildElement = activeElement ? contains(divContainer, activeElement) : undefined;\n            if (!isChildElement && onBlur) {\n                onBlur({ source: 'blur' });\n            }\n        }, 0);\n    };\n\n    const handleOnInternalDocumentKeyDown = (evt: KeyboardEvent<any>) => {\n        if (onKeyDown) {\n            onKeyDown(evt);\n        }\n    };\n\n    return (\n        <div\n            ref={divRef}\n            onBlur={handleOnBlur}\n            onKeyDown={handleOnInternalDocumentKeyDown}\n            onFocus={onFocus}\n            className={className}\n            tabIndex={tabIndex}>\n            {children}\n        </div>\n    );\n};\nexport default DomEventContainer;\n","import moment from 'moment';\nimport { InputDateString, INVALID_DATE, ISODateString } from '../types';\n\nexport const INVALID_DATE_VALUE = 'Invalid date';\nexport const INPUT_DATE_STRING_FORMAT: InputDateString = 'DD.MM.YYYY';\nexport const ISO_DATE_STRING_FORMAT: ISODateString = moment.HTML5_FMT.DATE;\n\nconst stringToUTCDate = (dateString: string | undefined, format: string): Date | undefined => {\n    if (dateString !== undefined && dateString.trim().length === 10) {\n        const d = moment.utc(dateString, format, true);\n        return d.isValid() ? d.toDate() : undefined;\n    }\n    return undefined;\n};\n\nexport const dateToInputDateString = (date?: Date): InputDateString | INVALID_DATE =>\n    date ? moment.utc(date).format(INPUT_DATE_STRING_FORMAT) : INVALID_DATE_VALUE;\n\nexport const dateToISODateString = (date: Date): ISODateString | INVALID_DATE => {\n    const d = moment.utc(date);\n    return d.isValid() ? d.format(ISO_DATE_STRING_FORMAT) : d.toString();\n};\n\nexport const ISODateStringToUTCDate = (isoDateString?: ISODateString): Date | undefined => {\n    return stringToUTCDate(isoDateString, ISO_DATE_STRING_FORMAT);\n};\n\nexport const InputDateStringToUTCDate = (inputDateString?: InputDateString): Date | undefined => {\n    return stringToUTCDate(inputDateString, INPUT_DATE_STRING_FORMAT);\n};\n\nexport const ISODateStringToInputDateString = (isoDateString: ISODateString): InputDateString | INVALID_DATE => {\n    const date = stringToUTCDate(isoDateString, ISO_DATE_STRING_FORMAT);\n    const stringValue = date ? dateToInputDateString(date) : INVALID_DATE_VALUE;\n    return stringValue === INVALID_DATE_VALUE ? INVALID_DATE_VALUE : stringValue;\n};\n\nexport const InputDateStringToISODateString = (inputDateString: InputDateString): string | INVALID_DATE => {\n    const date = stringToUTCDate(inputDateString, INPUT_DATE_STRING_FORMAT);\n    const stringValue = date ? dateToISODateString(date) : INVALID_DATE_VALUE;\n    return stringValue === INVALID_DATE_VALUE ? INVALID_DATE_VALUE : stringValue;\n};\n","import React, { ChangeEvent, FocusEvent, useEffect, useState } from 'react';\nimport { InputDateString, ISODateString } from './types';\nimport {\n    InputDateStringToISODateString,\n    INVALID_DATE_VALUE,\n    ISODateStringToInputDateString,\n} from './utils/dateFormatUtils';\n\nexport interface DatoInputProps {\n    valgtDato?: ISODateString;\n    onDateChange: (date: ISODateString | undefined) => void;\n    inputProps?: Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'>;\n    onInputChange?: (value: InputDateString, evt: React.ChangeEvent<HTMLInputElement>) => void;\n    disabled?: boolean;\n}\n\nconst Datoinput = React.forwardRef(function Datoinput(\n    {\n        valgtDato = '',\n        inputProps = { placeholder: 'dd.mm.åååå' },\n        disabled,\n        onDateChange,\n        onInputChange,\n    }: DatoInputProps,\n    ref: React.Ref<HTMLInputElement>\n) {\n    const getInputValueToRender = (inputDateString: InputDateString): string => {\n        return inputDateString === INVALID_DATE_VALUE ? '' : inputDateString;\n    };\n\n    const [value, setValue] = useState<InputDateString>(ISODateStringToInputDateString(valgtDato));\n\n    useEffect(() => {\n        setValue(valgtDato === undefined ? '' : ISODateStringToInputDateString(valgtDato));\n    }, [valgtDato]);\n\n    const onChange = (evt: ChangeEvent<HTMLInputElement>) => {\n        setValue(evt.target.value);\n        if (onInputChange) {\n            onInputChange(evt.target.value, evt);\n        }\n    };\n\n    const triggerValueChange = (inputValue: string) => {\n        const value = (inputValue || '').trim();\n        if (value === '') {\n            onDateChange(undefined);\n            return;\n        }\n        const isoDateString = InputDateStringToISODateString(value);\n        if (isoDateString !== INVALID_DATE_VALUE) {\n            if (isoDateString !== valgtDato) {\n                onDateChange(isoDateString);\n                setValue(isoDateString);\n            }\n        } else {\n            setValue('');\n            onDateChange(INVALID_DATE_VALUE);\n        }\n    };\n    const onBlur = (evt: FocusEvent<HTMLInputElement>) => {\n        triggerValueChange(evt.target.value);\n    };\n\n    const onKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n        if (evt.key === 'Enter') {\n            evt.preventDefault();\n            triggerValueChange((evt.target as HTMLInputElement).value || '');\n        }\n    };\n\n    return (\n        <input\n            {...{ placeholder: 'dd.mm.åååå', ...inputProps }}\n            ref={ref}\n            className=\"nav-datovelger__input\"\n            disabled={disabled}\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            pattern=\"\\d{2}.\\d{2}.\\d{4}\"\n            type=\"text\"\n            inputMode=\"numeric\"\n            value={getInputValueToRender(value)}\n            maxLength={10}\n            onChange={onChange}\n            onBlur={onBlur}\n            onKeyDown={onKeyDown}\n        />\n    );\n});\nexport default Datoinput;\n","export const Tekster = {\n    kalenderLabel: 'Kalender',\n    navbarNesteMånedLabel: 'Neste måned',\n    navbarForrigeMånedLabel: 'Forrige måned',\n    avgrensninger: {\n        måVæreMellom: (fraDato: string, tilDato: string) => `Dato må være mellom \"${fraDato}\" og \"${tilDato}\"`,\n        fra: (dato: string) => `Fra ${dato}`,\n        til: (dato: string) => `Til ${dato}`,\n        helg: 'Lørdager og søndager er ikke valgbare',\n    },\n};\n","import React from 'react';\n\nconst KalenderIkon = (props: {}) => (\n    <svg height={16} width={16} viewBox=\"0 0 18 18\" {...props} role=\"presentation\" aria-hidden=\"true\">\n        <title>Kalenderikon</title>\n        <g stroke=\"#0067C5\" fill=\"none\" fillRule=\"evenodd\">\n            <path d=\"M4 2.667H1.333v14h15.334v-14H14\" />\n            <path d=\"M4 1.333h2V4H4zm8 0h2V4h-2zM6 2h6M1.333 6h15.334\" />\n        </g>\n    </svg>\n);\n\nexport default KalenderIkon;\n","import React from 'react';\nimport { Tekster } from '../tekster';\nimport KalenderIkon from './KalenderIkon';\n\nexport interface Props {\n    onClick: () => void;\n    disabled?: boolean;\n    erÅpen: boolean;\n}\n\nclass KalenderKnapp extends React.Component<Props> {\n    button: HTMLButtonElement | null = null;\n    focus() {\n        if (this.button) {\n            this.button.focus();\n        }\n    }\n    render() {\n        const { onClick, erÅpen, disabled } = this.props;\n\n        return (\n            <button\n                ref={(c) => (this.button = c)}\n                type=\"button\"\n                className=\"nav-datovelger__kalenderknapp\"\n                onClick={(e) => {\n                    e.preventDefault();\n                    onClick();\n                }}\n                disabled={disabled}\n                aria-label={Tekster.kalenderLabel}\n                aria-expanded={erÅpen}>\n                <KalenderIkon />\n            </button>\n        );\n    }\n}\nexport default KalenderKnapp;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { KalenderPlassering } from '../types';\n\nexport interface Props {\n    plassering?: KalenderPlassering;\n}\n\nclass KalenderPortal extends React.Component<Props, {}> {\n    render() {\n        const { children, plassering } = this.props;\n        return (\n            <div\n                className={classnames(\n                    'nav-datovelger__kalenderPortal',\n                    `nav-datovelger__kalenderPortal--${plassering}`\n                )}>\n                <div className=\"nav-datovelger__kalenderPortal__content\">{children}</div>\n            </div>\n        );\n    }\n}\nexport default KalenderPortal;\n","import {\n    AfterModifier,\n    BeforeModifier,\n    DayPickerProps,\n    DaysOfWeekModifier,\n    Modifier,\n    RangeModifier,\n} from 'react-day-picker';\nimport moment from 'moment';\nimport { DatovelgerAvgrensninger } from '../types';\nimport { INPUT_DATE_STRING_FORMAT, ISO_DATE_STRING_FORMAT, ISODateStringToUTCDate } from './dateFormatUtils';\n\nexport const dagDatoNøkkel = (dato: Date) => moment(dato).format(INPUT_DATE_STRING_FORMAT);\n\nexport const getUtilgjengeligeDager = (avgrensninger: DatovelgerAvgrensninger): Modifier[] => {\n    let ugyldigeDager: Modifier[] = [];\n    if (avgrensninger.ugyldigeTidsperioder) {\n        ugyldigeDager = avgrensninger.ugyldigeTidsperioder\n            .map((t): RangeModifier | undefined => {\n                const from = ISODateStringToUTCDate(t.fom);\n                const to = ISODateStringToUTCDate(t.tom);\n                if (from && to) {\n                    return {\n                        from,\n                        to,\n                    };\n                }\n                return undefined;\n            })\n            .filter((t) => t !== undefined);\n    }\n    const minDato = avgrensninger.minDato;\n    const maksDato = avgrensninger.maksDato;\n    const helgedager = {\n        daysOfWeek: avgrensninger.helgedagerIkkeTillatt ? [0, 6] : [],\n    };\n    return [\n        ...ugyldigeDager,\n        ...(maksDato ? [{ after: moment(maksDato, ISO_DATE_STRING_FORMAT).toDate() } as AfterModifier] : []),\n        ...(minDato ? [{ before: moment(minDato, ISO_DATE_STRING_FORMAT).toDate() } as BeforeModifier] : []),\n        ...[helgedager as DaysOfWeekModifier],\n    ];\n};\n\nexport const getDefaultMåned = (\n    dato: string | undefined,\n    avgrensninger: DatovelgerAvgrensninger | undefined,\n    dayPickerProps: DayPickerProps | undefined\n): Date => {\n    const d = moment.utc(dato, ISO_DATE_STRING_FORMAT, true);\n    if (dato && d.isValid()) {\n        return d.toDate();\n    }\n\n    if (dayPickerProps && dayPickerProps.initialMonth) {\n        return dayPickerProps.initialMonth;\n    }\n\n    const idag = moment().toDate();\n    if (avgrensninger && avgrensninger.minDato) {\n        return moment(avgrensninger.minDato).isAfter(idag)\n            ? moment(avgrensninger.minDato, ISO_DATE_STRING_FORMAT).toDate()\n            : idag;\n    }\n    return idag;\n};\n","import { LocaleUtils } from 'react-day-picker/types/utils';\nimport moment from 'moment';\nimport { dateToInputDateString } from '../utils/dateFormatUtils';\n\nfunction formatDay(day: Date, locale = 'en') {\n    return moment(day).locale(locale).format('DD.MM.YYYY, dddd');\n}\n\nfunction formatMonthTitle(date: Date, locale = 'en') {\n    return moment(date).locale(locale).format('MMMM YYYY');\n}\n\nfunction formatWeekdayShort(day: number, locale = 'en') {\n    return moment().locale(locale).localeData().weekdays()[day].substr(0, 3);\n}\n\nfunction formatWeekdayLong(day: number, locale = 'en') {\n    return moment().locale(locale).localeData().weekdays()[day];\n}\n\nfunction getFirstDayOfWeek(locale) {\n    return moment().locale(locale).localeData().firstDayOfWeek();\n}\n\nfunction getMonths(locale) {\n    const months: string[] = [];\n    let i = 0;\n    while (i < 12) {\n        months.push(moment().locale(locale).month(i).format('MMMM'));\n        i += 1;\n    }\n    return months as any;\n}\n\nconst kalenderLocaleUtils: LocaleUtils = {\n    formatDay,\n    formatMonthTitle,\n    formatWeekdayLong,\n    formatWeekdayShort,\n    getMonths,\n    getFirstDayOfWeek,\n    formatDate: (date) => dateToInputDateString(date) || '',\n    parseDate: (d) => moment.utc(d).toDate(),\n};\n\nexport default kalenderLocaleUtils;\n","import React from 'react';\n\nexport type ChevronRetning = 'opp' | 'ned' | 'høyre' | 'venstre';\n\nexport interface Props {\n    retning?: ChevronRetning;\n}\n\nconst getRotationTransform = (retning?: ChevronRetning): string | undefined => {\n    switch (retning) {\n        case 'venstre':\n            return 'rotate(180deg)';\n        case 'opp':\n            return 'rotate(270deg)';\n        case 'ned':\n            return 'rotate(90deg)';\n        default:\n            return undefined;\n    }\n};\n\nconst Chevron = (props: Props) => {\n    const rotation = getRotationTransform(props.retning);\n    const style = rotation\n        ? {\n              transform: rotation,\n          }\n        : undefined;\n    return (\n        <svg style={style} width={16} height={16} viewBox=\"0 0 16 24\" role=\"presentation\" aria-hidden=\"true\">\n            <title>Chevron</title>\n            <path\n                d=\"M1.5 24a1 1 0 0 1-.646-1.764L12.953 12 .853 1.764A1 1 0 1 1 2.146.236l13 11a1.005 1.005 0 0 1 0 1.528l-13 11a1.003 1.003 0 0 1-.645.236\"\n                fill=\"#3e3832\"\n                fillRule=\"evenodd\"\n            />\n        </svg>\n    );\n};\n\nexport default Chevron;\n","import React from 'react';\nimport { LocaleUtils } from 'react-day-picker/types/utils';\nimport moment from 'moment';\nimport { guid } from 'nav-frontend-js-utils';\nimport { NavFocusElement } from './Kalender';\n\nexport interface Props {\n    defaultMonth: Date;\n    min?: Date;\n    max?: Date;\n    localeUtils: LocaleUtils;\n    locale: string;\n    onChange: (mnd: Date, fokusElement: NavFocusElement) => void;\n}\n\ninterface MonthOption {\n    value: number;\n    label: string;\n}\nconst getAvailableMonths = (monthNames: string[], defaultMonth: Date, min?: Date, maks?: Date): MonthOption[] => {\n    const options: MonthOption[] = [];\n    const from = min && defaultMonth.getFullYear() === min.getFullYear() ? min.getMonth() : 0;\n    const to = maks && defaultMonth.getFullYear() === maks.getFullYear() ? maks.getMonth() : 11;\n    let m = from;\n    while (m <= to) {\n        options.push({\n            value: m,\n            label: monthNames[m],\n        });\n        m++;\n    }\n    return options;\n};\n\nclass YearSelector extends React.Component<Props, {}> {\n    yearSelect: HTMLSelectElement | null = null;\n    monthSelect: HTMLSelectElement | null = null;\n\n    constructor(props: Props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.onYearChange = this.onYearChange.bind(this);\n        this.getYear = this.getYear.bind(this);\n        this.getMonth = this.getMonth.bind(this);\n    }\n\n    getYear(): number {\n        if (this.yearSelect) {\n            return parseInt(this.yearSelect.value, 10);\n        }\n        return (this.props.min || this.props.max || new Date()).getFullYear();\n    }\n\n    getMonth(): number {\n        if (this.monthSelect) {\n            return parseInt(this.monthSelect.value, 10);\n        }\n        return (this.props.min || this.props.max || new Date()).getMonth();\n    }\n\n    onChange() {\n        this.props.onChange(new Date(this.getYear(), this.getMonth()), 'mnd');\n    }\n\n    onYearChange() {\n        const year = parseInt(this.yearSelect?.value || '', 10);\n        const month = parseInt(this.monthSelect?.value || '', 10);\n        const newDate = new Date(year, month);\n        if (this.props.min && moment(newDate).isBefore(this.props.min)) {\n            this.props.onChange(this.props.min, 'aar');\n        } else if (this.props.max && moment(newDate).isAfter(this.props.max)) {\n            this.props.onChange(this.props.max, 'aar');\n        } else {\n            this.props.onChange(newDate, 'aar');\n        }\n    }\n\n    render() {\n        const {\n            defaultMonth,\n            min = new Date(1900, 0, 1),\n            max = moment().add(4, 'years').toDate(),\n            localeUtils,\n            locale,\n        } = this.props;\n        const monthNames = localeUtils.getMonths(locale);\n        const monthOptions = getAvailableMonths(monthNames, defaultMonth, min, max);\n        const years: number[] = [];\n\n        const minYear = Math.min(defaultMonth.getFullYear(), min.getFullYear());\n        const maxYear = Math.max(defaultMonth.getFullYear(), max.getFullYear());\n        for (let i = minYear; i <= maxYear; i += 1) {\n            years.push(i);\n        }\n\n        const mndSelectId = guid();\n        const yearSelectId = guid();\n        const showYearSelect = years.length > 1;\n        return (\n            <div className=\"nav-datovelger__yearSelector\">\n                {showYearSelect && (\n                    <div className=\"selectContainer\">\n                        <label className=\"sr-only\" htmlFor={yearSelectId}>\n                            Velg år\n                        </label>\n                        <select\n                            id={yearSelectId}\n                            ref={(c) => (this.yearSelect = c)}\n                            className=\"skjemaelement__input skjemaelement__input--year\"\n                            name=\"year\"\n                            onChange={this.onYearChange}\n                            value={defaultMonth.getFullYear()}>\n                            {years.map((year) => (\n                                <option key={year} value={year}>\n                                    {year}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                )}\n                <div className={`selectContainer${showYearSelect === false ? ' selectContainer--monthOnly' : ''}`}>\n                    <label className=\"sr-only\" htmlFor={mndSelectId}>\n                        Velg måned\n                    </label>\n                    <select\n                        id={mndSelectId}\n                        ref={(c) => (this.monthSelect = c)}\n                        className=\"skjemaelement__input\"\n                        name=\"month\"\n                        onChange={this.onChange}\n                        value={defaultMonth.getMonth()}>\n                        {monthOptions.map((m) => (\n                            <option key={m.value} value={m.value}>\n                                {m.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default YearSelector;\n","import React from 'react';\nimport { LocaleUtils } from 'react-day-picker/types/utils';\nimport classnames from 'classnames';\nimport moment from 'moment';\nimport Chevron from '../elementer/ChevronSvg';\nimport { Tekster } from '../tekster';\nimport { NavFocusElement } from './Kalender';\nimport YearSelector from './YearSelector';\n\nexport interface Props {\n    defaultMåned: Date;\n    byttMåned: (month: Date, fokusElement: NavFocusElement) => void;\n    byttÅr?: (month: Date) => void;\n    min?: Date;\n    maks?: Date;\n    visÅrVelger?: boolean;\n    locale: string;\n    localeUtils: LocaleUtils;\n}\n\nexport interface NavbarKnappProps {\n    måned: Date;\n    retning: 'forrige' | 'neste';\n    disabled: boolean;\n    onClick: (evt: any, måned: Date, fokusElement: NavFocusElement) => void;\n}\n\nclass NavbarKnapp extends React.Component<NavbarKnappProps> {\n    render() {\n        const { måned, retning, disabled, onClick } = this.props;\n        const label = retning === 'forrige' ? Tekster.navbarForrigeMånedLabel : Tekster.navbarNesteMånedLabel;\n\n        return (\n            <button\n                type=\"button\"\n                id={`kalender-navbarknapp-${retning}`}\n                className={classnames('nav-datovelger__navbar__knapp', `nav-datovelger__navbar__knapp--${retning}`, {\n                    'nav-datovelger__navbar__knapp--disabled': disabled,\n                })}\n                onClick={(e) => (disabled ? null : onClick(e, måned, retning))}\n                aria-label={label}\n                aria-disabled={disabled}>\n                <Chevron retning={retning === 'forrige' ? 'venstre' : 'høyre'} />\n            </button>\n        );\n    }\n}\n\nconst lagCaption = (props: Props) => props.localeUtils.formatMonthTitle(props.defaultMåned, props.locale);\n\nclass Navbar extends React.Component<Props> {\n    shouldComponentUpdate(nextProps: any) {\n        return lagCaption(nextProps) !== lagCaption(this.props);\n    }\n\n    render() {\n        const { defaultMåned, byttMåned, min, maks, visÅrVelger, locale, localeUtils } = this.props;\n\n        const forrigeMåned = moment(defaultMåned).add(-1, 'months');\n        const nesteMåned = moment(defaultMåned).add(1, 'months');\n\n        const forrigeErDisabled = min ? moment(min).isAfter(forrigeMåned.endOf('month')) : false;\n\n        const nesteErDisabled = maks ? moment(maks).isBefore(nesteMåned.startOf('month')) : false;\n\n        const onClick = (evt: React.MouseEvent<HTMLButtonElement>, mnd: Date, fokusElement: NavFocusElement) => {\n            evt.preventDefault();\n            evt.stopPropagation();\n            byttMåned(mnd, fokusElement);\n        };\n\n        return (\n            <div className=\"DayPicker-Caption\">\n                <span aria-live=\"assertive\" className={visÅrVelger ? 'sr-only' : ''}>\n                    {lagCaption(this.props)}\n                </span>\n                {visÅrVelger && (\n                    <div className=\"nav-datovelger__navbar__yearSelector\">\n                        <YearSelector\n                            defaultMonth={defaultMåned}\n                            max={maks}\n                            min={min}\n                            locale={locale}\n                            localeUtils={localeUtils}\n                            onChange={(mnd, fokusElement) => byttMåned(mnd, fokusElement)}\n                        />\n                    </div>\n                )}\n                <div\n                    role=\"navigation\"\n                    className={`nav-datovelger__navbar ${\n                        visÅrVelger ? 'nav-datovelger__navbar--withYearSelector' : ''\n                    }`}>\n                    <NavbarKnapp\n                        måned={forrigeMåned.toDate()}\n                        retning=\"forrige\"\n                        disabled={forrigeErDisabled}\n                        onClick={(evt, mnd) => onClick(evt, mnd, 'forrige')}\n                    />\n                    <NavbarKnapp\n                        måned={nesteMåned.toDate()}\n                        retning=\"neste\"\n                        disabled={nesteErDisabled}\n                        onClick={(evt, mnd) => onClick(evt, mnd, 'neste')}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;\n","import FocusTrap from 'focus-trap-react';\nimport React, { MutableRefObject, useState } from 'react';\nimport DayPicker, { DayModifiers, DayPickerProps, Modifier } from 'react-day-picker';\nimport { LocaleUtils } from 'react-day-picker/types/utils';\nimport { ISODateString } from '../types';\nimport { dateToISODateString, ISODateStringToUTCDate } from '../utils/dateFormatUtils';\nimport { fokuserPåMåned } from '../utils/kalenderFokusUtils';\nimport kalenderLocaleUtils from './localeUtils';\nimport Navbar from './Navbar';\n\nexport interface Props {\n    måned: Date;\n    dato?: ISODateString;\n    min?: ISODateString;\n    maks?: ISODateString;\n    locale: string;\n    localeUtils?: LocaleUtils;\n    onVelgDag: (dato: ISODateString) => void;\n    onLukk: () => void;\n    utilgjengeligeDager?: Modifier[];\n    visUkenumre?: boolean;\n    kanVelgeUgyldigDato?: boolean;\n    visÅrVelger?: boolean;\n    dayPickerProps?: DayPickerProps;\n}\n\nexport type NavFocusElement = 'neste' | 'forrige' | 'aar' | 'mnd';\n\nconst Kalender = React.forwardRef(function Calendar(props: Props, ref: React.Ref<HTMLDivElement>) {\n    const [displayMonth, setDisplayMonth] = useState<Date>(props.måned);\n\n    const {\n        dato,\n        min,\n        maks,\n        locale = 'nb',\n        localeUtils,\n        visUkenumre,\n        utilgjengeligeDager,\n        visÅrVelger,\n        kanVelgeUgyldigDato,\n        onLukk,\n        onVelgDag,\n        dayPickerProps,\n    } = props;\n\n    const onSelectDate = (dato: Date, modifiers: DayModifiers) => {\n        if (kanVelgeUgyldigDato || !modifiers.disabled) {\n            onVelgDag(dateToISODateString(dato));\n        }\n    };\n\n    const onChangeMonth = (month: Date, navFocusElement?: NavFocusElement) => {\n        setDisplayMonth(month);\n        if (ref) {\n            const calendar = (ref as MutableRefObject<HTMLElement>).current;\n            if (navFocusElement) {\n                setTimeout(() => {\n                    fokuserPåMåned(calendar, navFocusElement);\n                });\n            }\n        }\n    };\n\n    const innstillinger: DayPickerProps = {\n        locale,\n        localeUtils,\n        navbarElement: function navbarElement() {\n            return <span />;\n        },\n        captionElement: function CaptionElement() {\n            const minDate = ISODateStringToUTCDate(min);\n            const maxDate = ISODateStringToUTCDate(maks);\n            return (\n                <Navbar\n                    defaultMåned={displayMonth}\n                    byttMåned={onChangeMonth}\n                    min={minDate}\n                    maks={maxDate}\n                    locale={locale}\n                    localeUtils={{\n                        ...kalenderLocaleUtils,\n                        ...localeUtils,\n                    }}\n                    visÅrVelger={visÅrVelger}\n                />\n            );\n        },\n        firstDayOfWeek: 1,\n        showWeekNumbers: visUkenumre,\n    };\n\n    return (\n        <div ref={ref} role=\"dialog\" aria-label=\"Kalender\" className=\"nav-datovelger__kalender\">\n            <FocusTrap\n                active={true}\n                focusTrapOptions={{\n                    clickOutsideDeactivates: true,\n                    onDeactivate: onLukk,\n                }}>\n                <DayPicker\n                    locale={locale}\n                    localeUtils={localeUtils}\n                    fromMonth={min ? ISODateStringToUTCDate(min) : undefined}\n                    toMonth={maks ? ISODateStringToUTCDate(maks) : undefined}\n                    month={displayMonth}\n                    canChangeMonth={false}\n                    selectedDays={dato ? ISODateStringToUTCDate(dato) : undefined}\n                    onDayClick={onSelectDate}\n                    onMonthChange={onChangeMonth}\n                    disabledDays={utilgjengeligeDager}\n                    {...innstillinger}\n                    {...dayPickerProps}\n                />\n            </FocusTrap>\n        </div>\n    );\n});\nexport default Kalender;\n","import { NavFocusElement } from '../kalender/Kalender';\nimport { dagDatoNøkkel } from './';\n\ntype RefHTMLElement = HTMLElement | null;\n\nexport const fokuserPåDato = (kalender: RefHTMLElement, dato: Date) => {\n    if (kalender) {\n        const el: HTMLElement = kalender.querySelector(`[data-date=\"${dagDatoNøkkel(dato)}\"]`) as HTMLElement;\n        if (el) {\n            (el.parentNode as HTMLElement).focus();\n        }\n    }\n};\n\nconst getMånedFokusDomElement = (kalender: RefHTMLElement, fokusElement: NavFocusElement): HTMLElement | undefined => {\n    let el: any;\n    if (kalender) {\n        switch (fokusElement) {\n            case 'forrige':\n            case 'neste':\n                el = kalender.querySelector(`.nav-datovelger__navbar__knapp--${fokusElement}`);\n                break;\n            case 'aar':\n                el = kalender.querySelector(`select[name=year]`);\n                break;\n            case 'mnd':\n                el = kalender.querySelector(`select[name=month]`);\n                break;\n        }\n    }\n    if (el && el !== null) {\n        return el;\n    }\n    return undefined;\n};\n\nexport const fokuserPåMåned = (kalender: RefHTMLElement, fokusElement: NavFocusElement) => {\n    if (kalender) {\n        const el = getMånedFokusDomElement(kalender, fokusElement);\n        if (el) {\n            el.focus();\n        }\n    }\n};\n","import React, { InputHTMLAttributes, useEffect, useRef, useState } from 'react';\nimport { DayPickerProps } from 'react-day-picker';\nimport DomEventContainer from './common/DomEventContainer';\nimport Datoinput from './Datoinput';\nimport KalenderKnapp from './elementer/KalenderKnapp';\nimport KalenderPortal from './elementer/KalenderPortal';\nimport Kalender from './kalender/Kalender';\nimport { DatovelgerAvgrensninger, ISODateString, KalenderPlassering } from './types';\nimport { getDefaultMåned, getUtilgjengeligeDager } from './utils';\n\nexport interface DatovelgerProps {\n    id: string;\n    valgtDato?: ISODateString;\n    avgrensninger?: DatovelgerAvgrensninger;\n    datoErGyldig?: boolean;\n    onChange: (date?: ISODateString) => void;\n    kalender?: {\n        visUkenumre?: boolean;\n        plassering?: KalenderPlassering;\n    };\n    kanVelgeUgyldigDato?: boolean;\n    locale?: string;\n    disabled?: boolean;\n    input: {\n        id: string;\n        name: string;\n        ariaLabel?: string;\n        placeholder?: string;\n        ariaDescribedby?: string;\n    };\n    visÅrVelger?: boolean;\n    dayPickerProps?: DayPickerProps;\n}\n\nconst Datovelger = ({\n    id,\n    avgrensninger,\n    valgtDato,\n    dayPickerProps,\n    input,\n    kalender,\n    locale = 'nb',\n    disabled,\n    visÅrVelger,\n    datoErGyldig,\n    kanVelgeUgyldigDato,\n    onChange,\n    ...kalenderProps\n}: DatovelgerProps) => {\n    const [activeMonth, setActiveMonth] = useState<Date>(getDefaultMåned(valgtDato, avgrensninger, dayPickerProps));\n    const [calendarIsVisible, setCalendarIsVisible] = useState<boolean>(false);\n\n    const dateInput = useRef(null);\n    const calendar = useRef(null);\n\n    useEffect(() => {\n        setActiveMonth(getDefaultMåned(valgtDato, avgrensninger, dayPickerProps));\n    }, [valgtDato, avgrensninger, dayPickerProps]);\n\n    const dateInputProps: Partial<InputHTMLAttributes<HTMLInputElement>> = {\n        name: input.name || `${id}__input`,\n        'aria-invalid': datoErGyldig,\n        'aria-label': input.ariaLabel,\n        'aria-describedby': input.ariaDescribedby,\n        placeholder: input.placeholder,\n    };\n\n    const setDate = (dateString: ISODateString | undefined, closeCalender?: boolean) => {\n        setCalendarIsVisible(false);\n        onChange(dateString);\n        if (closeCalender) {\n            setCalendarIsVisible(false);\n        }\n    };\n\n    return (\n        <DomEventContainer>\n            <div className=\"nav-datovelger\">\n                <div className=\"nav-datovelger__inputContainer\">\n                    <Datoinput\n                        inputProps={dateInputProps}\n                        ref={dateInput}\n                        valgtDato={valgtDato || ''}\n                        onDateChange={setDate}\n                        disabled={disabled}\n                    />\n                    <KalenderKnapp\n                        disabled={disabled}\n                        onClick={() => setCalendarIsVisible(!calendarIsVisible)}\n                        erÅpen={calendarIsVisible}\n                    />\n                </div>\n                {calendarIsVisible && (\n                    <KalenderPortal plassering={kalender && kalender.plassering}>\n                        <Kalender\n                            ref={calendar}\n                            {...kalenderProps}\n                            locale={locale}\n                            dato={valgtDato}\n                            måned={activeMonth}\n                            min={avgrensninger && avgrensninger.minDato}\n                            maks={avgrensninger && avgrensninger.maksDato}\n                            utilgjengeligeDager={avgrensninger ? getUtilgjengeligeDager(avgrensninger) : undefined}\n                            onVelgDag={(d: string) => setDate(d, true)}\n                            onLukk={() => setCalendarIsVisible(false)}\n                            kanVelgeUgyldigDato={kanVelgeUgyldigDato}\n                            dayPickerProps={dayPickerProps}\n                            visÅrVelger={visÅrVelger}\n                        />\n                    </KalenderPortal>\n                )}\n            </div>\n        </DomEventContainer>\n    );\n};\nexport default Datovelger;\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport Knapp from 'nav-frontend-knapper';\nimport Datovelger from '../../datovelger/Datovelger';\nimport { Tidsperiode, ISODateString } from '../../datovelger/types';\nimport Box from '../components/box/Box';\n\nconst DatovelgerEksempel: React.FunctionComponent = () => {\n    const [dato, setDato] = useState<ISODateString | undefined>('');\n    const takenRange: Tidsperiode = {\n        fom: '2020-04-10',\n        tom: '2020-04-11',\n    };\n\n    return (\n        <div>\n            <Box>\n                <Datovelger\n                    valgtDato={dato}\n                    onChange={(d) => setDato(d)}\n                    id=\"datovelger\"\n                    kalender={{ visUkenumre: true }}\n                    visÅrVelger={true}\n                    locale={'fr'}\n                    input={{ name: 'dato', id: 'ahl' }}\n                    avgrensninger={{\n                        helgedagerIkkeTillatt: false,\n                        ugyldigeTidsperioder: [takenRange],\n                        minDato: '2020-04-03',\n                        maksDato: '2020-05-15',\n                    }}\n                />\n            </Box>\n            <Box margin=\"l\">Valgt dato: {dato}</Box>\n            <Box margin=\"l\">\n                <Knapp onClick={() => setDato(moment(new Date()).format(moment.HTML5_FMT.DATE))}>\n                    Sett dagens dato\n                </Knapp>\n                <Knapp onClick={() => setDato(undefined)}>Fjern dato</Knapp>{' '}\n            </Box>\n        </div>\n    );\n};\nexport default DatovelgerEksempel;\n","import React from 'react';\nimport { Ingress, } from 'nav-frontend-typografi';\nimport Box from './components/box/Box';\nimport PageIntro from './components/page-intro/PageIntro';\nimport DatovelgerEksempel from './eksempler/DatovelgerEksempel';\n\ninterface Props {}\n\nconst Intro: React.FunctionComponent<Props> = (props) => (\n    <>\n        <PageIntro title=\"nav-datovelger\">\n            <h2>Enkel datovelger basert på react-day-picker</h2>\n        </PageIntro>\n        <Ingress style={{ marginBottom: '.5rem' }}>Eksempel:</Ingress>\n        <Box>\n            <DatovelgerEksempel />\n        </Box>\n    </>\n);\n\nexport default Intro;\n","import React from 'react';\nimport Intro from '../Intro';\n\nexport interface RouteConfig {\n    path: string;\n    title: string;\n    renderContent: () => React.ReactNode;\n}\n\nexport const routes: RouteConfig[] = [\n    {\n        path: 'frontpage',\n        title: 'Forside',\n        renderContent: () => <Intro />\n    }\n];\n\nexport const getRouteConfig = (pathname: string): RouteConfig | undefined => {\n    return routes.find((f) => isActiveRoute(f.path, pathname));\n};\n\nexport const isActiveRoute = (path: string, pathname: string): boolean => {\n    return pathname.indexOf(path) >= 0;\n};\n","import React from 'react';\nimport { Link, useHistory, } from 'react-router-dom';\nimport 'nav-frontend-lenker-style';\nimport { isActiveRoute, routes, } from '../../config/routeConfig';\nimport bemUtils from '../../utils/bemUtils';\n\nconst lenkeBem = bemUtils('lenke');\n\nconst LeftMenu: React.FunctionComponent = () => {\n    const {\n        location: { pathname }\n    } = useHistory();\n    return (\n        <div className=\"leftMenu\">\n            {routes.map((route) => (\n                <Link\n                    key={route.path}\n                    to={route.path}\n                    className={lenkeBem.classNames(\n                        lenkeBem.block,\n                        lenkeBem.modifierConditional('active', isActiveRoute(route.path, pathname))\n                    )}>\n                    {route.title}\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default LeftMenu;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport LeftMenu from './components/left-menu/LeftMenu';\nimport { getRouteConfig } from './config/routeConfig';\nimport Intro from './Intro';\n\nconst DevContent: React.FunctionComponent = () => {\n    const history = useHistory();\n    const {\n        location: { pathname },\n    } = history;\n    const routeConfig = getRouteConfig(pathname);\n    return (\n        <>\n            <aside className=\"asideContent\">\n                <LeftMenu />\n            </aside>\n            <article style={{ maxWidth: '1000px' }} className=\"mainContent\">\n                {routeConfig ? routeConfig.renderContent() : <Intro />}\n            </article>\n        </>\n    );\n};\n\nexport default DevContent;\n","import React from 'react';\nimport { BrowserRouter, } from 'react-router-dom';\nimport { Systemtittel, } from 'nav-frontend-typografi';\nimport NAVLogo from './components/svg/NAVLogo';\nimport DevContent from './DevContent';\nimport './styles/dev.less';\n\ninterface Props {}\n\nconst DevPage: React.FunctionComponent<Props> = () => {\n    return (\n        <main className=\"devPage\">\n            <header className=\"header\">\n                <span className=\"navLogo\">\n                    <NAVLogo />\n                </span>\n                <span className=\"header__title\">\n                    <Systemtittel>nav-datovelger</Systemtittel>\n                </span>\n            </header>\n            <div className=\"contentWrapper\">\n                <BrowserRouter>\n                    <DevContent />\n                </BrowserRouter>\n            </div>\n        </main>\n    );\n};\n\nexport default DevPage;\n","import React from 'react';\nimport 'nav-frontend-skjema-style';\nimport { Normaltekst } from 'nav-frontend-typografi';\nimport DevPage from './dev/DevPage';\nimport './dev/styles/globalStyles.less';\n\nrequire('../node_modules/moment/locale/nb.js');\nrequire('../node_modules/moment/locale/nn.js');\n\nconst App: React.FC = () => {\n    return (\n        <Normaltekst tag=\"div\">\n            <DevPage />\n        </Normaltekst>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport App from './App';\n\nModal.setAppElement('#root');\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}