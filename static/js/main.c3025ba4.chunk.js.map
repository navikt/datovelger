{"version":3,"sources":["dev/components/svg/NAVLogo.tsx","dev/utils/bemUtils.ts","dev/components/box/Box.tsx","dev/components/page-intro/PageIntro.tsx","datepicker/common/DomEventContainer.tsx","datepicker/utils/focusUtils.ts","datepicker/utils/calendarFocusUtils.ts","datepicker/utils/dateFormatUtils.ts","datepicker/utils/calendarLocaleUtils.ts","datepicker/elementer/ChevronSvg.tsx","datepicker/texts.ts","datepicker/calendar/YearSelector.tsx","datepicker/calendar/Navbar.tsx","datepicker/calendar/Calendar.tsx","datepicker/DateInput.tsx","datepicker/elementer/CalendarIcon.tsx","datepicker/elementer/CalendarButton.tsx","datepicker/elementer/CalendarPortal.tsx","datepicker/hooks/usePrevious.ts","datepicker/types/typeGuards.ts","datepicker/utils/index.ts","datepicker/Datepicker.tsx","dev/utils/holidays.ts","dev/examples/DatepickerExample.tsx","dev/Intro.tsx","dev/config/routeConfig.tsx","dev/components/left-menu/LeftMenu.tsx","dev/DevContent.tsx","dev/DevPage.tsx","App.tsx","index.tsx"],"names":["NAVLogo","props","className","width","viewBox","fill","fillRule","d","bemUtils","cls","block","element","e","m","modifier","modifierConditional","condition","undefined","child","c","classNames","bem","bemHelper","Box","margin","padBottom","textAlignCenter","children","PageIntro","title","tag","DomEventContainer","divRef","useRef","active","onBlur","onKeyDown","onFocus","tabIndex","useState","isActive","setIsActive","useEffect","handleDocumentKeyDown","evt","source","keyCode","window","addEventListener","removeEventListener","ref","divContainer","current","setTimeout","node","activeElement","document","contains","elementSelector","nodelistToArray","nodes","arr","i","length","unshift","item","tabEnabledSelectors","concat","allTabIndexEnabledSelectors","getFocusableElements","el","onlyTabReachable","querySelectorAll","join","setFocusOnFirstElementInDayPickerCaption","calendar","querySelector","elements","focus","focusFirstElement","setFocusOnLastElementInDayPickerCaption","focusLastElement","dayjs","extend","utc","customParseFormat","INVALID_DATE_VALUE","INPUT_DATE_STRING_FORMAT","ISO_DATE_STRING_FORMAT","ALLOWED_INPUT_FORMATS","stringToUTCDate","dateString","format","trim","isValid","toDate","dateToInputDateString","date","dateToISODateString","toString","ISODateStringToUTCDate","isoDateString","ISODateStringToInputDateString","stringValue","twoDigitYearFormats","appendCenturyToTwoYearDigitDateString","century","twoDigitYear","slice","extractTwoDigitYear","date80YearsAgo","subtract","InputDateStringToISODateString","inputDateString","twoDigitYearFormatsWith4YearDigits","dateStringIn20thCentury","dateIn20thCentury","dateStringIn21stCentury","dateIn21stCentury","isBefore","assignCenturyToDateWithTwoYearDigits","localeData","calendarLocaleUtils","formatDay","day","locale","formatMonthTitle","formatWeekdayLong","weekdays","formatWeekdayShort","substr","getMonths","months","push","month","getFirstDayOfWeek","firstDayOfWeek","formatDate","parseDate","Chevron","rotation","retning","getRotationTransform","direction","style","transform","height","role","aria-hidden","Texts","YearSelector","yearSelect","monthSelect","onChange","bind","onYearChange","getYear","getMonth","this","parseInt","value","minDate","maxDate","Date","getFullYear","stopPropagation","preventDefault","year","newDate","isAfter","defaultMonth","min","max","add","monthOptions","monthNames","options","from","to","label","getAvailableMonths","localeUtils","years","minYear","Math","maxYear","monthSelectId","guid","yearSelectId","showYearSelect","htmlFor","id","name","map","React","Component","NavbarButton","disabled","onClick","type","classnames","aria-label","aria-disabled","createCaption","Navbar","nextProps","onChangeMonth","showYearSelector","previousMonth","nextMonth","lastMonthIsDisabled","endOf","nextMonthIsDisabled","startOf","focusElement","aria-live","require","Calendar","forwardRef","displayMonth","setDisplayMonth","minDateString","maxDateString","showWeekNumbers","unavailableDates","allowInvalidDateSelection","onClose","onSelect","setFocusOnDateWhenOpened","dayPickerProps","getMonthElement","setFocusOnCalendarMonth","onMonthChange","dayPickerPropsToUse","navbarElement","captionElement","calendarRef","setInitialDayFocus","key","target","indexOf","shiftKey","focusTrapOptions","clickOutsideDeactivates","onDeactivate","fromMonth","toMonth","canChangeMonth","selectedDays","onDayClick","modifiers","disabledDays","isInputFormattedDateString","match","DateInput","dateValue","inputProps","onDateChange","getInitialValue","inputValue","setInputValue","triggerValueChange","autoComplete","autoCorrect","inputMode","maxLength","CalendarIcon","focusable","pointerEvents","stroke","CalendarButton","button","isOpen","aria-expanded","CalendarPortal","position","usePrevious","isISODateString","getInvalidDates","limitations","invalidDates","invalidDateRanges","t","filter","weekendDays","daysOfWeek","weekendsNotSelectable","after","before","isSameDate","d1","d2","isSame","getDefaultMonth","initialMonth","today","Datepicker","inputId","calendarSettings","activeMonth","setActiveMonth","calendarIsVisible","setCalendarIsVisible","prevValue","initialMonthPrevValue","setDate","inputRef","norwegianHolidays","DateHolidays","holidays","days","fromYear","toYear","getHolidays","Ã¥r","start","slutt","getPublicHolidays","renderDate","isPublicHoliday","some","DatepickerExample","setShowYearSelector","setShowWeekNumbers","showPublicHolidays","setShowPublicHolidays","setInitialMonth","setLocale","display","marginBottom","console","log","mini","padding","checked","Intro","href","routes","path","renderContent","isActiveRoute","pathname","lenkeBem","LeftMenu","useHistory","location","route","DevContent","routeConfig","find","f","getRouteConfig","maxWidth","DevPage","App","Modal","setAppElement","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c3025ba4.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NAVLogo(props) {\n    return (\n        <svg className=\"prefix__navLogo\" width={90} viewBox=\"0 0 269 169\" {...props}>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <path\n                    fill=\"#C30000\"\n                    d=\"M125.31 168.942c-46.642 0-84.46-37.817-84.46-84.465C40.85 37.824 78.667 0 125.31 0c46.657 0 84.48 37.824 84.48 84.477 0 46.648-37.823 84.465-84.48 84.465zM0 121.359l17.265-42.73h16.589l-17.243 42.73zm213.044 0l17.044-42.73h9.044l-17.043 42.73zM246.564 121.359l17.04-42.73h4.803l-17.043 42.731z\"\n                />\n                <path\n                    fill=\"#FEFEFE\"\n                    d=\"M197.36 78.63h-15.016s-1.035 0-1.4.914l-8.31 25.439-8.304-25.44c-.366-.913-1.407-.913-1.407-.913h-28.872c-.625 0-1.149.522-1.149 1.143v8.639c0-6.853-7.292-9.782-11.562-9.782-9.562 0-15.963 6.298-17.956 15.873-.108-6.352-.636-8.628-2.347-10.96-.786-1.141-1.922-2.101-3.159-2.895-2.547-1.492-4.834-2.018-9.749-2.018h-5.77s-1.044 0-1.412.914l-5.25 13.013V79.773c0-.621-.52-1.143-1.145-1.143H61.198s-1.03 0-1.406.914l-5.459 13.53s-.545 1.354.701 1.354h5.133v25.784c0 .64.504 1.147 1.147 1.147h13.238c.624 0 1.144-.507 1.144-1.147V94.428h5.16c2.961 0 3.588.08 4.74.618.694.262 1.32.792 1.66 1.403.698 1.314.873 2.892.873 7.545v16.218c0 .64.514 1.147 1.15 1.147h12.687s1.434 0 2.001-1.416l2.812-6.95c3.74 5.237 9.893 8.366 17.541 8.366h1.671s1.443 0 2.014-1.416l4.897-12.128v12.397c0 .64.524 1.147 1.15 1.147h12.951s1.43 0 2.003-1.416c0 0 5.18-12.861 5.2-12.958h.008c.2-1.07-1.153-1.07-1.153-1.07h-4.623V83.847l14.545 36.096c.568 1.416 2 1.416 2 1.416h15.301s1.44 0 2.008-1.416l16.125-39.93c.558-1.383-1.057-1.383-1.057-1.383zm-64.458 27.285h-8.7c-3.463 0-6.28-2.804-6.28-6.271 0-3.461 2.817-6.283 6.28-6.283h2.433c3.454 0 6.267 2.822 6.267 6.283v6.27z\"\n                />\n            </g>\n        </svg>\n    );\n}\n\nexport default NAVLogo;\n","import classNames from 'classnames';\n\nconst bemUtils = (cls: string) => ({\n    block: cls,\n    element: (e?: string, m?: string) => `${cls}__${e}${m ? ` ${cls}__${e}--${m}` : ''}`,\n    modifier: (m?: string) => `${cls}--${m}`,\n    modifierConditional: (m: string | undefined, condition: boolean | undefined) =>\n        condition === true && m !== undefined ? `${cls}--${m}` : undefined,\n    child: (c: string) => bemUtils(bemUtils(cls).element(c)),\n    classNames,\n});\n\nexport default bemUtils;\n","import React from 'react';\nimport bemHelper from '../../utils/bemUtils';\nimport './box.less';\n\ntype BoxMargin = 's' | 'm' | 'l' | 'xl' | 'xxl' | 'xxxl' | 'none';\n\ninterface BoxProps {\n    margin?: BoxMargin;\n    padBottom?: BoxMargin;\n    textAlignCenter?: boolean;\n    className?: string;\n    children: React.ReactNode;\n}\n\nconst bem = bemHelper('box');\n\nconst Box: React.FunctionComponent<BoxProps> = ({\n    margin,\n    padBottom,\n    className,\n    textAlignCenter,\n    children,\n}: BoxProps) => {\n    const classNames = bem.classNames(\n        bem.block,\n        bem.modifierConditional(margin, margin !== undefined),\n        bem.modifierConditional(`bottom-${padBottom}`, padBottom !== undefined),\n        {\n            [bem.modifier('textAlignCenter')]: textAlignCenter,\n            [`${className}`]: className !== undefined,\n        }\n    );\n    return <div className={classNames}>{children}</div>;\n};\n\nexport default Box;\n","import React from 'react';\nimport { Ingress, Undertittel } from 'nav-frontend-typografi';\nimport Box from '../box/Box';\n\ninterface Props {\n    title: string;\n    children: React.ReactNode;\n}\n\nconst PageIntro: React.FunctionComponent<Props> = ({ title, children }: Props) => (\n    <>\n        <Box margin=\"m\">\n            <Box>\n                <Undertittel>{title}</Undertittel>\n            </Box>\n            {children && (\n                <Box padBottom=\"xl\">\n                    <Ingress tag=\"div\">{children}</Ingress>\n                </Box>\n            )}\n        </Box>\n    </>\n);\n\nexport default PageIntro;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { KeyboardEvent, useEffect, useRef, useState } from 'react';\n\nexport interface ContainerBlurEvent {\n    source: 'esc' | 'blur';\n}\n\nexport function contains(node: HTMLElement, child: Element) {\n    return node === child || node.contains(child);\n}\n\nexport interface Props {\n    onKeyDown?: (evt: React.KeyboardEvent<HTMLDivElement>) => void;\n    onBlur?: (evt: React.FocusEvent<HTMLDivElement> | { source: string }) => void;\n    onFocus?: (evt: React.FocusEvent<HTMLDivElement>) => void;\n    active?: boolean;\n    className?: string;\n    tabIndex?: number;\n    children: React.ReactNode;\n}\n\nconst DomEventContainer = (props: Props) => {\n    const divRef = useRef<HTMLDivElement>(null);\n    const { active, onBlur, onKeyDown, onFocus, className, tabIndex, children } = props;\n\n    const [isActive, setIsActive] = useState<boolean>(active === true);\n\n    useEffect(() => {\n        const blur = (source: string) => {\n            if (onBlur) {\n                onBlur({\n                    source,\n                });\n            }\n        };\n        const handleDocumentKeyDown = (evt?: any) => {\n            if (evt && evt.keyCode === 27) {\n                blur('esc');\n            }\n        };\n        const startEventListening = () => {\n            window.addEventListener('keydown', handleDocumentKeyDown);\n        };\n\n        const stopEventListening = () => {\n            window.removeEventListener('keydown', handleDocumentKeyDown);\n        };\n        if (active !== isActive) {\n            if (active === true) {\n                startEventListening();\n                setIsActive(true);\n            } else {\n                stopEventListening();\n                setIsActive(false);\n            }\n        }\n    }, [active, setIsActive, isActive, onBlur]);\n\n    const handleOnBlur = () => {\n        const divContainer = divRef.current || null;\n        if (divContainer === null) {\n            return;\n        }\n        setTimeout(() => {\n            const activeElement = window.document.activeElement;\n            const isChildElement = activeElement ? contains(divContainer, activeElement) : undefined;\n            if (!isChildElement && onBlur) {\n                onBlur({ source: 'blur' });\n            }\n        }, 0);\n    };\n\n    const handleOnInternalDocumentKeyDown = (evt: KeyboardEvent<any>) => {\n        if (onKeyDown) {\n            onKeyDown(evt);\n        }\n    };\n\n    return (\n        <div\n            ref={divRef}\n            onBlur={handleOnBlur}\n            onKeyDown={handleOnInternalDocumentKeyDown}\n            onFocus={onFocus}\n            className={className}\n            tabIndex={tabIndex}>\n            {children}\n        </div>\n    );\n};\nexport default DomEventContainer;\n","const elementSelector = [\n    'a[href]',\n    'select:not([disabled])',\n    'input:not([disabled])',\n    'textarea:not([disabled])',\n    '[tabindex]',\n    'button:not([disabled])',\n];\n\nfunction nodelistToArray(nodes: NodeList): HTMLElement[] {\n    const arr: HTMLElement[] = [];\n    for (let i = nodes.length; i--; ) {\n        arr.unshift(nodes.item(i) as HTMLElement);\n    }\n    return arr;\n}\n\nconst tabEnabledSelectors = [`[tabIndex='0']`].concat(elementSelector);\nconst allTabIndexEnabledSelectors = [`[tabIndex]`].concat(elementSelector);\n\nexport function getFocusableElements(el: Element, onlyTabReachable = true): HTMLElement[] | undefined {\n    if (!el) {\n        return undefined;\n    }\n    if (onlyTabReachable) {\n        return nodelistToArray(el.querySelectorAll(tabEnabledSelectors.join(',')));\n    } else {\n        return nodelistToArray(el.querySelectorAll(allTabIndexEnabledSelectors.join(',')));\n    }\n}\n\nexport function focusFirstElement(el: Element) {\n    const elements = getFocusableElements(el);\n    if (elements && elements.length > 0) {\n        (elements[0] as HTMLElement).focus();\n    } else {\n        (el as HTMLElement).focus();\n    }\n}\n\nexport function focusLastElement(el: Element) {\n    const elements = getFocusableElements(el);\n    if (elements && elements.length > 0) {\n        (elements[elements.length - 1] as HTMLElement).focus();\n    } else {\n        (el as HTMLElement).focus();\n    }\n}\n","import { NavigationFocusElement } from '../calendar/Calendar';\nimport { focusFirstElement, focusLastElement } from './focusUtils';\n\ntype RefHTMLElement = HTMLElement | null;\n\nexport const setInitialDayFocus = (calendar: RefHTMLElement) => {\n    if (calendar) {\n        const el: HTMLElement =\n            (calendar.querySelector(`.DayPicker-Day--selected`) as HTMLElement) ||\n            (calendar.querySelector(`.DayPicker-Day--today`) as HTMLElement) ||\n            (calendar.querySelector(`.DayPicker-Day[aria-disabled=\"false\"]`) as HTMLElement);\n        if (el) {\n            el.focus();\n        }\n    }\n};\nexport const setFocusOnFirstElementInDayPickerCaption = (calendar: RefHTMLElement) => {\n    if (calendar) {\n        const el: HTMLElement = calendar.querySelector(`.DayPicker-Caption`) as HTMLElement;\n        if (el) {\n            focusFirstElement(el);\n        }\n    }\n};\nexport const setFocusOnLastElementInDayPickerCaption = (calendar: RefHTMLElement) => {\n    if (calendar) {\n        const el: HTMLElement = calendar.querySelector(`.DayPicker-Caption`) as HTMLElement;\n        if (el) {\n            focusLastElement(el);\n        }\n    }\n};\n\nconst getMonthElement = (calendar: RefHTMLElement, focusElement: NavigationFocusElement): HTMLElement | undefined => {\n    let el: any;\n    if (calendar) {\n        switch (focusElement) {\n            case 'previousMonth':\n            case 'nextMonth':\n                el = calendar.querySelector(`.nav-datovelger__navbar__knapp--${focusElement}`);\n                break;\n            case 'year':\n                el = calendar.querySelector(`select[name=year]`);\n                break;\n            case 'month':\n                el = calendar.querySelector(`select[name=month]`);\n                break;\n        }\n    }\n    if (el && el !== null) {\n        return el;\n    }\n    return undefined;\n};\n\nexport const setFocusOnCalendarMonth = (calendar: RefHTMLElement, focusElement: NavigationFocusElement) => {\n    if (calendar) {\n        const el = getMonthElement(calendar, focusElement);\n        if (el) {\n            el.focus();\n        }\n    }\n};\n","import dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { InputDateString, INVALID_DATE_TYPE, ISODateString } from '../types';\n\ndayjs.extend(utc);\ndayjs.extend(customParseFormat);\n\nexport const INVALID_DATE_VALUE = 'Invalid date';\nexport const INPUT_DATE_STRING_FORMAT: InputDateString = 'DD.MM.YYYY';\nexport const ISO_DATE_STRING_FORMAT: ISODateString = 'YYYY-MM-DD';\n\nconst ALLOWED_INPUT_FORMATS = [\n    INPUT_DATE_STRING_FORMAT,\n    'DDMMYYYY',\n    'DD/MM/YYYY',\n    'DD-MM-YYYY',\n    'DDMMYY',\n    'D.M.YY',\n    'DD.MM.YY',\n];\n\nconst stringToUTCDate = (dateString: string | undefined, format: string): Date | undefined => {\n    if (dateString !== undefined && dateString.trim && dateString.trim().length === 10) {\n        const d = dayjs(dateString, format).utc(true);\n        return d.isValid() ? d.toDate() : undefined;\n    }\n    return undefined;\n};\n\nexport const dateToInputDateString = (date?: Date): InputDateString | INVALID_DATE_TYPE =>\n    date ? dayjs.utc(date).format(INPUT_DATE_STRING_FORMAT) : INVALID_DATE_VALUE;\n\nexport const dateToISODateString = (date: Date): ISODateString | INVALID_DATE_TYPE => {\n    const d = dayjs.utc(date);\n    return d.isValid() ? d.format(ISO_DATE_STRING_FORMAT) : d.toString();\n};\n\nexport const ISODateStringToUTCDate = (isoDateString?: ISODateString): Date | undefined => {\n    return stringToUTCDate(isoDateString, ISO_DATE_STRING_FORMAT);\n};\n\nexport const InputDateStringToUTCDate = (inputDateString?: InputDateString): Date | undefined => {\n    return stringToUTCDate(inputDateString, INPUT_DATE_STRING_FORMAT);\n};\n\nexport const ISODateStringToInputDateString = (isoDateString: ISODateString): InputDateString | INVALID_DATE_TYPE => {\n    const date = stringToUTCDate(isoDateString, ISO_DATE_STRING_FORMAT);\n    const stringValue = date ? dateToInputDateString(date) : INVALID_DATE_VALUE;\n    return stringValue === INVALID_DATE_VALUE ? INVALID_DATE_VALUE : stringValue;\n};\n\nconst twoDigitYearFormats = ['DDMMYY', 'D.M.YY', 'DD.MM.YY'];\nconst hasTwoDigitYear = (dateString) => {\n    return dayjs(dateString, twoDigitYearFormats, true).isValid();\n};\n\nconst extractTwoDigitYear = (dateString) => {\n    return dateString.slice(-2);\n};\n\nconst appendCenturyToTwoYearDigitDateString = (dateString, century: '19' | '20') => {\n    const twoDigitYear = extractTwoDigitYear(dateString);\n    return `${dateString.slice(0, dateString.length - 2)}${century}${twoDigitYear}`;\n};\n\nconst date80YearsAgo = dayjs().subtract(80, 'year');\n\nconst assignCenturyToDateWithTwoYearDigits = (dateString) => {\n    const twoDigitYearFormatsWith4YearDigits = ['DDMMYYYY', 'D.M.YYYY', 'DD.MM.YYYY'];\n\n    const dateStringIn20thCentury = appendCenturyToTwoYearDigitDateString(dateString, '19');\n    const dateIn20thCentury = dayjs(dateStringIn20thCentury, twoDigitYearFormatsWith4YearDigits, true).utc(true);\n\n    const dateStringIn21stCentury = appendCenturyToTwoYearDigitDateString(dateString, '20');\n    const dateIn21stCentury = dayjs(dateStringIn21stCentury, twoDigitYearFormatsWith4YearDigits, true).utc(true);\n\n    if (dateIn20thCentury.isValid() && dateIn21stCentury.isValid()) {\n        if (dateIn20thCentury.isBefore(date80YearsAgo)) {\n            return dateToISODateString(dateIn21stCentury.toDate());\n        } else {\n            return dateToISODateString(dateIn20thCentury.toDate());\n        }\n    }\n    return INVALID_DATE_VALUE;\n};\n\nexport const InputDateStringToISODateString = (inputDateString: InputDateString): string | INVALID_DATE_TYPE => {\n    if (hasTwoDigitYear(inputDateString)) {\n        return assignCenturyToDateWithTwoYearDigits(inputDateString);\n    }\n\n    const date = dayjs(inputDateString, ALLOWED_INPUT_FORMATS, true).utc(true);\n    return date.isValid() ? dateToISODateString(date.toDate()) : INVALID_DATE_VALUE;\n};\n","import { LocaleUtils } from 'react-day-picker';\nimport dayjs from 'dayjs';\nimport localeData from 'dayjs/plugin/localeData';\nimport utc from 'dayjs/plugin/utc';\nimport { dateToInputDateString } from './dateFormatUtils';\n\ndayjs.extend(localeData);\ndayjs.extend(utc);\n\nfunction formatDay(day: Date, locale = 'nb') {\n    return dayjs(day).locale(locale).format('DD.MM.YYYY, dddd');\n}\n\nfunction formatMonthTitle(date: Date, locale = 'nb') {\n    return dayjs(date).locale(locale).format('MMMM YYYY');\n}\n\nfunction formatWeekdayShort(day: number, locale = 'nb') {\n    return dayjs().locale(locale).localeData().weekdays()[day].substr(0, 3);\n}\n\nfunction formatWeekdayLong(day: number, locale = 'nb') {\n    return dayjs().locale(locale).localeData().weekdays()[day];\n}\n\nfunction getFirstDayOfWeek(locale = 'nb') {\n    return dayjs().locale(locale).localeData().firstDayOfWeek();\n}\n\nfunction getMonths(locale = 'nb') {\n    const months: string[] = [];\n    let i = 0;\n    while (i < 12) {\n        months.push(dayjs().locale(locale).month(i).format('MMMM'));\n        i += 1;\n    }\n    return months as any;\n}\n\nconst calendarLocaleUtils: LocaleUtils = {\n    formatDay,\n    formatMonthTitle,\n    formatWeekdayLong,\n    formatWeekdayShort,\n    getMonths,\n    getFirstDayOfWeek,\n    formatDate: (date) => dateToInputDateString(date) || '',\n    parseDate: (d) => dayjs.utc(d).toDate(),\n};\n\nexport default calendarLocaleUtils;\n","import React from 'react';\n\nexport type ChevronRetning = 'opp' | 'ned' | 'hÃ¸yre' | 'venstre';\n\nexport interface Props {\n    direction?: ChevronRetning;\n}\n\nconst getRotationTransform = (retning?: ChevronRetning): string | undefined => {\n    switch (retning) {\n        case 'venstre':\n            return 'rotate(180deg)';\n        case 'opp':\n            return 'rotate(270deg)';\n        case 'ned':\n            return 'rotate(90deg)';\n        default:\n            return undefined;\n    }\n};\n\nconst Chevron = (props: Props) => {\n    const rotation = getRotationTransform(props.direction);\n    const style = rotation\n        ? {\n              transform: rotation,\n          }\n        : undefined;\n    return (\n        <svg style={style} width={16} height={16} viewBox=\"0 0 16 24\" role=\"presentation\" aria-hidden=\"true\">\n            <title>Chevron</title>\n            <path\n                d=\"M1.5 24a1 1 0 0 1-.646-1.764L12.953 12 .853 1.764A1 1 0 1 1 2.146.236l13 11a1.005 1.005 0 0 1 0 1.528l-13 11a1.003 1.003 0 0 1-.645.236\"\n                fill=\"#3e3832\"\n                fillRule=\"evenodd\"\n            />\n        </svg>\n    );\n};\n\nexport default Chevron;\n","export const Texts = {\n    calendarLabel: 'Kalender',\n    navBarNextMonthLabel: 'Neste mÃ¥ned',\n    navbarPreviousMonthLabel: 'Forrige mÃ¥ned',\n    limitations: {\n        validDateRange: (fromDateString: string, toDateString: string) =>\n            `Dato mÃ¥ vÃ¦re mellom \"${fromDateString}\" og \"${toDateString}\"`,\n        from: (dateString: string) => `Fra ${dateString}`,\n        to: (dato: string) => `Til ${dato}`,\n        weekendsNotSelectable: 'LÃ¸rdager og sÃ¸ndager er ikke valgbare',\n    },\n};\n","/* eslint-disable jsx-a11y/no-onchange */\nimport React, { ChangeEvent } from 'react';\nimport { LocaleUtils } from 'react-day-picker';\nimport dayjs from 'dayjs';\nimport { guid } from 'nav-frontend-js-utils';\nimport { NavigationFocusElement } from './Calendar';\n\nexport interface Props {\n    defaultMonth: Date;\n    minDate?: Date;\n    maxDate?: Date;\n    localeUtils: LocaleUtils;\n    onChange: (month: Date, focusElement: NavigationFocusElement) => void;\n}\n\ninterface MonthOption {\n    value: number;\n    label: string;\n}\nconst getAvailableMonths = (\n    monthNames: string[],\n    defaultMonth: Date,\n    minDate?: Date,\n    maxDate?: Date\n): MonthOption[] => {\n    const options: MonthOption[] = [];\n    const from = minDate && defaultMonth.getFullYear() === minDate.getFullYear() ? minDate.getMonth() : 0;\n    const to = maxDate && defaultMonth.getFullYear() === maxDate.getFullYear() ? maxDate.getMonth() : 11;\n    let m = from;\n    while (m <= to) {\n        options.push({\n            value: m,\n            label: monthNames[m],\n        });\n        m++;\n    }\n    return options;\n};\n\nclass YearSelector extends React.Component<Props> {\n    yearSelect: HTMLSelectElement | null = null;\n    monthSelect: HTMLSelectElement | null = null;\n\n    constructor(props: Props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.onYearChange = this.onYearChange.bind(this);\n        this.getYear = this.getYear.bind(this);\n        this.getMonth = this.getMonth.bind(this);\n    }\n\n    getYear(): number {\n        if (this.yearSelect) {\n            return parseInt(this.yearSelect.value, 10);\n        }\n        return (this.props.minDate || this.props.maxDate || new Date()).getFullYear();\n    }\n\n    getMonth(): number {\n        if (this.monthSelect) {\n            return parseInt(this.monthSelect.value, 10);\n        }\n        return (this.props.minDate || this.props.maxDate || new Date()).getMonth();\n    }\n\n    onChange(evt: ChangeEvent<HTMLSelectElement>) {\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.props.onChange(new Date(this.getYear(), this.getMonth()), 'month');\n    }\n\n    onYearChange(evt: ChangeEvent<HTMLSelectElement>) {\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        const year = parseInt(this.yearSelect?.value || '', 10);\n        const month = parseInt(this.monthSelect?.value || '', 10);\n        const newDate = new Date(year, month);\n        if (this.props.minDate && dayjs(newDate).isBefore(this.props.minDate)) {\n            this.props.onChange(this.props.minDate, 'year');\n        } else if (this.props.maxDate && dayjs(newDate).isAfter(this.props.maxDate)) {\n            this.props.onChange(this.props.maxDate, 'year');\n        } else {\n            this.props.onChange(newDate, 'year');\n        }\n    }\n\n    render() {\n        const {\n            defaultMonth,\n            minDate: min = new Date(1900, 0, 1),\n            maxDate: max = dayjs().add(4, 'year').toDate(),\n            localeUtils,\n        } = this.props;\n        const monthNames = localeUtils.getMonths();\n        const monthOptions = getAvailableMonths(monthNames, defaultMonth, min, max);\n        const years: number[] = [];\n\n        const minYear = Math.min(defaultMonth.getFullYear(), min.getFullYear());\n        const maxYear = Math.max(defaultMonth.getFullYear(), max.getFullYear());\n        for (let i = minYear; i <= maxYear; i += 1) {\n            years.push(i);\n        }\n\n        const monthSelectId = guid();\n        const yearSelectId = guid();\n        const showYearSelect = years.length > 1;\n        return (\n            <div className=\"nav-datovelger__yearSelector\">\n                {showYearSelect && (\n                    <div className=\"selectContainer\">\n                        <label className=\"sr-only\" htmlFor={yearSelectId}>\n                            Velg Ã¥r\n                        </label>\n                        <select\n                            id={yearSelectId}\n                            ref={(c) => (this.yearSelect = c)}\n                            className=\"skjemaelement__input skjemaelement__input--year\"\n                            name=\"year\"\n                            onChange={this.onYearChange}\n                            value={defaultMonth.getFullYear()}>\n                            {years.map((year) => (\n                                <option key={year} value={year}>\n                                    {year}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                )}\n                <div className={`selectContainer${showYearSelect === false ? ' selectContainer--monthOnly' : ''}`}>\n                    <label className=\"sr-only\" htmlFor={monthSelectId}>\n                        Velg mÃ¥ned\n                    </label>\n                    <select\n                        id={monthSelectId}\n                        ref={(c) => (this.monthSelect = c)}\n                        className=\"skjemaelement__input\"\n                        name=\"month\"\n                        onChange={this.onChange}\n                        value={defaultMonth.getMonth()}>\n                        {monthOptions.map((m) => (\n                            <option key={m.value} value={m.value}>\n                                {m.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default YearSelector;\n","import React from 'react';\nimport { LocaleUtils } from 'react-day-picker';\nimport classnames from 'classnames';\nimport dayjs from 'dayjs';\nimport Chevron from '../elementer/ChevronSvg';\nimport { Texts } from '../texts';\nimport { NavigationFocusElement } from './Calendar';\nimport YearSelector from './YearSelector';\n\ntype Direction = 'previousMonth' | 'nextMonth';\n\ninterface Props {\n    defaultMonth: Date;\n    onChangeMonth: (month: Date, focusElement: NavigationFocusElement) => void;\n    onChangeYear?: (month: Date) => void;\n    minDate?: Date;\n    maxDate?: Date;\n    showYearSelector?: boolean;\n    localeUtils: LocaleUtils;\n}\n\ninterface NavbarButtonProps {\n    month: Date;\n    direction: Direction;\n    disabled: boolean;\n    onClick: (evt: any, mÃ¥ned: Date, focusElement: NavigationFocusElement) => void;\n}\n\nclass NavbarButton extends React.Component<NavbarButtonProps> {\n    render() {\n        const { month, direction, disabled, onClick } = this.props;\n        const label = direction === 'previousMonth' ? Texts.navbarPreviousMonthLabel : Texts.navBarNextMonthLabel;\n\n        return (\n            <button\n                type=\"button\"\n                id={`kalender-navbarknapp-${direction}`}\n                className={classnames('nav-datovelger__navbar__knapp', `nav-datovelger__navbar__knapp--${direction}`, {\n                    'nav-datovelger__navbar__knapp--disabled': disabled,\n                })}\n                onClick={(e) => (disabled ? null : onClick(e, month, direction))}\n                aria-label={label}\n                aria-disabled={disabled}>\n                <Chevron direction={direction === 'previousMonth' ? 'venstre' : 'hÃ¸yre'} />\n            </button>\n        );\n    }\n}\n\nconst createCaption = (props: Props) => props.localeUtils.formatMonthTitle(props.defaultMonth);\n\nclass Navbar extends React.Component<Props> {\n    shouldComponentUpdate(nextProps: any) {\n        return createCaption(nextProps) !== createCaption(this.props);\n    }\n\n    render() {\n        const { defaultMonth, onChangeMonth, minDate, maxDate, showYearSelector, localeUtils } = this.props;\n\n        const previousMonth = dayjs(defaultMonth).subtract(1, 'month');\n        const nextMonth = dayjs(defaultMonth).add(1, 'month');\n\n        const lastMonthIsDisabled = minDate ? dayjs(minDate).isAfter(previousMonth.endOf('month')) : false;\n        const nextMonthIsDisabled = maxDate ? dayjs(maxDate).isBefore(nextMonth.startOf('month')) : false;\n\n        const onClick = (\n            evt: React.MouseEvent<HTMLButtonElement>,\n            month: Date,\n            focusElement: NavigationFocusElement\n        ) => {\n            evt.preventDefault();\n            evt.stopPropagation();\n            onChangeMonth(month, focusElement);\n        };\n\n        return (\n            <div className=\"DayPicker-Caption\">\n                <span aria-live=\"assertive\" className={showYearSelector ? 'sr-only' : ''}>\n                    {createCaption(this.props)}\n                </span>\n                {showYearSelector && (\n                    <div className=\"nav-datovelger__navbar__yearSelector\">\n                        <YearSelector\n                            defaultMonth={defaultMonth}\n                            maxDate={maxDate}\n                            minDate={minDate}\n                            localeUtils={localeUtils}\n                            onChange={(month, focusElement) => onChangeMonth(month, focusElement)}\n                        />\n                    </div>\n                )}\n                <nav\n                    className={`nav-datovelger__navbar ${\n                        showYearSelector ? 'nav-datovelger__navbar--withYearSelector' : ''\n                    }`}>\n                    <NavbarButton\n                        month={previousMonth.toDate()}\n                        direction={'previousMonth'}\n                        disabled={lastMonthIsDisabled}\n                        onClick={(evt, month) => onClick(evt, month, 'previousMonth')}\n                    />\n                    <NavbarButton\n                        month={nextMonth.toDate()}\n                        direction={'nextMonth'}\n                        disabled={nextMonthIsDisabled}\n                        onClick={(evt, month) => onClick(evt, month, 'nextMonth')}\n                    />\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;\n","import FocusTrap from 'focus-trap-react';\nimport React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport DayPicker, { DayModifiers, DayPickerProps, LocaleUtils, Modifier } from 'react-day-picker';\nimport DomEventContainer from '../common/DomEventContainer';\nimport { DatepickerLocales, ISODateString } from '../types';\nimport {\n    setFocusOnCalendarMonth,\n    setFocusOnFirstElementInDayPickerCaption,\n    setFocusOnLastElementInDayPickerCaption,\n    setInitialDayFocus,\n} from '../utils/calendarFocusUtils';\nimport calendarLocaleUtils from '../utils/calendarLocaleUtils';\nimport { dateToISODateString, ISODateStringToUTCDate } from '../utils/dateFormatUtils';\nimport Navbar from './Navbar';\n\nrequire('dayjs/locale/nb.js');\nrequire('dayjs/locale/nn.js');\n\ninterface Props {\n    month: Date;\n    dateString?: ISODateString;\n    minDateString?: ISODateString;\n    maxDateString?: ISODateString;\n    localeUtils?: LocaleUtils;\n    onSelect: (dateString: ISODateString) => void;\n    onClose: () => void;\n    unavailableDates?: Modifier[];\n    allowInvalidDateSelection?: boolean;\n    showWeekNumbers?: boolean;\n    showYearSelector?: boolean;\n    locale: DatepickerLocales;\n    dayPickerProps?: DayPickerProps;\n    setFocusOnDateWhenOpened?: boolean;\n}\n\nexport type NavigationFocusElement = 'nextMonth' | 'previousMonth' | 'year' | 'month';\n\nconst Calendar = React.forwardRef(function Calendar(props: Props, ref: React.Ref<HTMLDivElement>) {\n    const [displayMonth, setDisplayMonth] = useState<Date>(props.month);\n\n    const {\n        dateString,\n        minDateString,\n        maxDateString,\n        localeUtils,\n        showWeekNumbers,\n        unavailableDates,\n        showYearSelector,\n        allowInvalidDateSelection,\n        locale,\n        onClose,\n        onSelect,\n        setFocusOnDateWhenOpened,\n        dayPickerProps,\n    } = props;\n\n    const onSelectDate = (date: Date, modifiers: DayModifiers) => {\n        if (allowInvalidDateSelection || !modifiers.disabled) {\n            onSelect(dateToISODateString(date));\n        }\n    };\n\n    const onChangeMonth = (month: Date, focusElement?: NavigationFocusElement) => {\n        setDisplayMonth(month);\n        if (ref) {\n            const calendar = (ref as MutableRefObject<HTMLElement>).current;\n            if (focusElement) {\n                setTimeout(() => {\n                    setFocusOnCalendarMonth(calendar, focusElement);\n                });\n            }\n        }\n        if (dayPickerProps?.onMonthChange) {\n            dayPickerProps?.onMonthChange(month);\n        }\n    };\n\n    const dayPickerPropsToUse: DayPickerProps = {\n        localeUtils: calendarLocaleUtils,\n        navbarElement: function navbarElement() {\n            return <span />;\n        },\n        captionElement: function CaptionElement() {\n            const minDate = ISODateStringToUTCDate(minDateString);\n            const maxDate = ISODateStringToUTCDate(maxDateString);\n            return (\n                <Navbar\n                    defaultMonth={displayMonth}\n                    onChangeMonth={onChangeMonth}\n                    minDate={minDate}\n                    maxDate={maxDate}\n                    localeUtils={{\n                        ...calendarLocaleUtils,\n                        ...localeUtils,\n                    }}\n                    showYearSelector={showYearSelector}\n                />\n            );\n        },\n        firstDayOfWeek: 1,\n        showWeekNumbers,\n    };\n\n    const calendarRef = useRef<any>();\n    useEffect(() => {\n        if (setFocusOnDateWhenOpened && calendarRef.current) {\n            setInitialDayFocus(calendarRef.current);\n        }\n    }, [calendarRef, setFocusOnDateWhenOpened]);\n\n    return (\n        <div ref={ref} role=\"dialog\" aria-label=\"Kalender\" className=\"nav-datovelger__kalender\">\n            <DomEventContainer\n                onKeyDown={(evt) => {\n                    if (evt.key === 'Tab' && evt.target) {\n                        const className: string = (evt.target as any).className || '';\n                        if (className.indexOf('DayPicker-Day') >= 0) {\n                            if (evt.shiftKey === false) {\n                                setFocusOnFirstElementInDayPickerCaption(calendarRef.current);\n                            } else {\n                                setFocusOnLastElementInDayPickerCaption(calendarRef.current);\n                            }\n                            evt.stopPropagation();\n                            evt.preventDefault();\n                        }\n                    }\n                }}>\n                <div ref={calendarRef}>\n                    <FocusTrap\n                        active={true}\n                        focusTrapOptions={{\n                            clickOutsideDeactivates: true,\n                            onDeactivate: onClose,\n                        }}>\n                        <DayPicker\n                            locale={locale}\n                            fromMonth={minDateString ? ISODateStringToUTCDate(minDateString) : undefined}\n                            toMonth={maxDateString ? ISODateStringToUTCDate(maxDateString) : undefined}\n                            canChangeMonth={false}\n                            selectedDays={dateString ? ISODateStringToUTCDate(dateString) : undefined}\n                            onDayClick={onSelectDate}\n                            onMonthChange={onChangeMonth}\n                            disabledDays={unavailableDates}\n                            {...dayPickerProps}\n                            {...dayPickerPropsToUse}\n                            month={displayMonth}\n                        />\n                    </FocusTrap>\n                </div>\n            </DomEventContainer>\n        </div>\n    );\n});\nexport default Calendar;\n","import React, { ChangeEvent, FocusEvent, InputHTMLAttributes, useEffect, useState } from 'react';\nimport { InputDateString, ISODateString } from './types';\nimport {\n    InputDateStringToISODateString,\n    INVALID_DATE_VALUE,\n    ISODateStringToInputDateString,\n} from './utils/dateFormatUtils';\n\nexport type DatepickerInputProps = Pick<\n    InputHTMLAttributes<HTMLInputElement>,\n    'name' | 'aria-invalid' | 'aria-label' | 'aria-describedby' | 'placeholder' | 'disabled' | 'pattern' | 'title'\n>;\n\ninterface Props {\n    id?: string;\n    dateValue?: ISODateString;\n    onDateChange: (date: ISODateString | string | undefined) => void;\n    inputProps?: DatepickerInputProps;\n}\n\nconst getInitialValue = (dateValue: string): string => {\n    const inputDateString = ISODateStringToInputDateString(dateValue);\n    return inputDateString === INVALID_DATE_VALUE ? dateValue : inputDateString;\n};\n\nconst isInputFormattedDateString = (value: any) => {\n    if (value && typeof value === 'string') {\n        const reg = /^\\d{2}.\\d{2}.\\d{4}$/;\n        const match: RegExpMatchArray | null = value.match(reg);\n        return match !== null;\n    } else {\n        return false;\n    }\n};\nconst DateInput = React.forwardRef(function DateInput(\n    { id, dateValue = '', inputProps, onDateChange }: Props,\n    ref: React.Ref<HTMLInputElement>\n) {\n    const [inputValue, setInputValue] = useState<InputDateString>(getInitialValue(dateValue));\n\n    const triggerValueChange = (value = '') => {\n        const isoDateString = InputDateStringToISODateString(value.trim());\n        if (isoDateString !== INVALID_DATE_VALUE) {\n            if (!isInputFormattedDateString(value) && dateValue !== '') {\n                setInputValue(ISODateStringToInputDateString(dateValue));\n            }\n            onDateChange(isoDateString);\n        } else {\n            onDateChange(value);\n        }\n    };\n\n    const onChange = (evt: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(evt.target.value);\n    };\n\n    const onBlur = (evt: FocusEvent<HTMLInputElement>) => {\n        triggerValueChange(evt.target.value);\n    };\n\n    const onKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n        if (evt.key === 'Enter') {\n            evt.preventDefault();\n            triggerValueChange((evt.target as HTMLInputElement).value);\n        }\n    };\n\n    useEffect(() => {\n        const inputDateString = ISODateStringToInputDateString(dateValue);\n        if (inputDateString !== INVALID_DATE_VALUE) {\n            setInputValue(dateValue === undefined || dateValue === '' ? '' : inputDateString);\n        } else {\n            setInputValue(dateValue);\n        }\n    }, [dateValue]);\n\n    return (\n        <input\n            ref={ref}\n            id={id}\n            {...inputProps}\n            className={`nav-datovelger__input${\n                inputProps && inputProps['aria-invalid'] === true ? ' skjemaelement__input--harFeil' : ''\n            }`}\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            type=\"text\"\n            inputMode=\"text\"\n            value={inputValue}\n            maxLength={10}\n            onChange={onChange}\n            onBlur={onBlur}\n            onKeyDown={onKeyDown}\n        />\n    );\n});\nexport default DateInput;\n","import React from 'react';\n\nconst CalendarIcon = () => (\n    <svg\n        height={16}\n        width={16}\n        viewBox=\"0 0 18 18\"\n        role=\"presentation\"\n        focusable={false}\n        style={{ pointerEvents: 'none' }}>\n        <title>Kalenderikon</title>\n        <g stroke=\"#0067C5\" fill=\"none\" fillRule=\"evenodd\">\n            <path d=\"M4 2.667H1.333v14h15.334v-14H14\" />\n            <path d=\"M4 1.333h2V4H4zm8 0h2V4h-2zM6 2h6M1.333 6h15.334\" />\n        </g>\n    </svg>\n);\n\nexport default CalendarIcon;\n","import React from 'react';\nimport { Texts } from '../texts';\nimport CalendarIcon from './CalendarIcon';\n\nexport interface Props {\n    onClick: () => void;\n    disabled?: boolean;\n    isOpen: boolean;\n}\n\nclass CalendarButton extends React.Component<Props> {\n    button: HTMLButtonElement | null = null;\n    focus() {\n        if (this.button) {\n            this.button.focus();\n        }\n    }\n    render() {\n        const { onClick, isOpen, disabled } = this.props;\n\n        return (\n            <button\n                ref={(c) => (this.button = c)}\n                type=\"button\"\n                className=\"nav-datovelger__kalenderknapp\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    onClick();\n                }}\n                disabled={disabled}\n                aria-expanded={isOpen}>\n                <span className=\"sr-only\">{Texts.calendarLabel}</span>\n                <span aria-hidden={true} className=\"nav-datovelger__kalenderknapp__icon\">\n                    <CalendarIcon />\n                </span>\n            </button>\n        );\n    }\n}\nexport default CalendarButton;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { CalendarPlacement } from '../types';\n\nexport interface Props {\n    position?: CalendarPlacement;\n}\n\nclass CalendarPortal extends React.Component<Props> {\n    render() {\n        const { children, position = 'responsive' } = this.props;\n        return (\n            <div\n                className={classnames('nav-datovelger__kalenderPortal', `nav-datovelger__kalenderPortal--${position}`)}>\n                <div className=\"nav-datovelger__kalenderPortal__content\">{children}</div>\n            </div>\n        );\n    }\n}\nexport default CalendarPortal;\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(value: T) {\n    const ref = useRef<T>();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n","/** ISODateString format: YYYY-MM-DD **/\nimport { ISODateString } from './index';\n\nexport const isISODateString = (value: any): value is ISODateString => {\n    if (value && typeof value === 'string') {\n        const reg = /^\\d{4}-\\d{2}-\\d{2}$/;\n        const match: RegExpMatchArray | null = value.match(reg);\n        return match !== null;\n    } else {\n        return false;\n    }\n};\n","import {\n    AfterModifier,\n    BeforeModifier,\n    DayPickerProps,\n    DaysOfWeekModifier,\n    Modifier,\n    RangeModifier,\n} from 'react-day-picker';\nimport dayjs from 'dayjs';\nimport { DatepickerLimitations } from '../types';\nimport { INPUT_DATE_STRING_FORMAT, ISO_DATE_STRING_FORMAT, ISODateStringToUTCDate } from './dateFormatUtils';\n\nexport const dayDateKey = (date: Date) => dayjs(date).format(INPUT_DATE_STRING_FORMAT);\n\nexport const getInvalidDates = (limitations: DatepickerLimitations): Modifier[] => {\n    let invalidDates: Modifier[] = [];\n    if (limitations.invalidDateRanges) {\n        invalidDates = limitations.invalidDateRanges\n            .map((t): RangeModifier | undefined => {\n                const from = ISODateStringToUTCDate(t.from);\n                const to = ISODateStringToUTCDate(t.to);\n                if (from && to) {\n                    return {\n                        from,\n                        to,\n                    };\n                }\n                return undefined;\n            })\n            .filter((t) => t !== undefined);\n    }\n    const minDate = limitations.minDate;\n    const maxDate = limitations.maxDate;\n    const weekendDays = {\n        daysOfWeek: limitations.weekendsNotSelectable ? [0, 6] : [],\n    };\n    return [\n        ...invalidDates,\n        ...(maxDate ? [{ after: dayjs(maxDate, ISO_DATE_STRING_FORMAT).toDate() } as AfterModifier] : []),\n        ...(minDate ? [{ before: dayjs(minDate, ISO_DATE_STRING_FORMAT).toDate() } as BeforeModifier] : []),\n        ...[weekendDays as DaysOfWeekModifier],\n    ];\n};\n\nexport const isSameDate = (d1: Date, d2: Date) => {\n    return dayjs(d1).isSame(d2, 'day');\n};\n\nexport const getDefaultMonth = (\n    dateString: string | undefined,\n    limitations: DatepickerLimitations | undefined,\n    dayPickerProps: DayPickerProps | undefined\n): Date => {\n    const d = dayjs(dateString).utc(true).format(ISO_DATE_STRING_FORMAT);\n    if (dateString && dayjs(d).isValid()) {\n        return dayjs(d).toDate();\n    }\n    if (dayPickerProps && dayPickerProps.initialMonth) {\n        return dayPickerProps.initialMonth;\n    }\n    const today = dayjs().toDate();\n    if (limitations && limitations.minDate) {\n        return dayjs(limitations.minDate).isAfter(today)\n            ? dayjs(limitations.minDate, ISO_DATE_STRING_FORMAT).toDate()\n            : today;\n    }\n    return today;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { DayPickerProps } from 'react-day-picker';\nimport { guid } from 'nav-frontend-js-utils';\nimport DomEventContainer from './common/DomEventContainer';\nimport Calendar from './calendar/Calendar';\nimport DateInput, { DatepickerInputProps } from './DateInput';\nimport CalendarButton from './elementer/CalendarButton';\nimport CalendarPortal from './elementer/CalendarPortal';\nimport { usePrevious } from './hooks/usePrevious';\nimport { CalendarPlacement, DatepickerLimitations, DatepickerLocales, ISODateString } from './types';\nimport { isISODateString } from './types/typeGuards';\nimport { getDefaultMonth, getInvalidDates, isSameDate } from './utils';\nimport './styles/datepicker.less';\n\nexport type DatepickerValue = ISODateString | string;\n\nexport type DatepickerChange = (value: DatepickerValue, isValidISODateString: boolean) => void;\n\nexport interface DatepickerProps {\n    inputId?: string;\n    value?: string | undefined;\n    onChange: DatepickerChange;\n    disabled?: boolean;\n    limitations?: DatepickerLimitations;\n    calendarSettings?: {\n        showWeekNumbers?: boolean;\n        position?: CalendarPlacement;\n    };\n    locale?: DatepickerLocales;\n    inputProps?: DatepickerInputProps & { inputRef?: React.Ref<HTMLInputElement> };\n    allowInvalidDateSelection?: boolean;\n    showYearSelector?: boolean;\n    dayPickerProps?: DayPickerProps;\n    setFocusOnDateWhenOpened?: boolean;\n}\n\nconst Datepicker = ({\n    inputId = guid(),\n    limitations,\n    value,\n    inputProps,\n    calendarSettings,\n    disabled,\n    allowInvalidDateSelection,\n    locale = 'nb',\n    showYearSelector,\n    onChange,\n    dayPickerProps,\n    setFocusOnDateWhenOpened,\n}: DatepickerProps) => {\n    const [activeMonth, setActiveMonth] = useState<Date>(getDefaultMonth(value, limitations, dayPickerProps));\n    const [calendarIsVisible, setCalendarIsVisible] = useState<boolean>(false);\n    const prevValue = usePrevious(value);\n    const initialMonthPrevValue = usePrevious(dayPickerProps?.initialMonth);\n\n    const calendarRef = useRef<any>();\n\n    useEffect(() => {\n        const initialMonth = dayPickerProps?.initialMonth;\n        if (initialMonth !== initialMonthPrevValue && value === prevValue) {\n            const defaultMonth = getDefaultMonth(value, limitations, dayPickerProps);\n            if (!isSameDate(defaultMonth, activeMonth)) {\n                setActiveMonth(defaultMonth);\n            }\n        }\n        if (value !== prevValue) {\n            const defaultMonth = getDefaultMonth(value, limitations, dayPickerProps);\n            if (!isSameDate(defaultMonth, activeMonth)) {\n                setActiveMonth(defaultMonth);\n            }\n        }\n    }, [value, limitations, prevValue, activeMonth, dayPickerProps, initialMonthPrevValue]);\n\n    const setDate = (value = '') => {\n        setCalendarIsVisible(false);\n        onChange(value, isISODateString(value));\n    };\n    return (\n        <DomEventContainer>\n            <div className=\"nav-datovelger\">\n                <div className=\"nav-datovelger__inputContainer\">\n                    <DateInput\n                        id={inputId}\n                        ref={inputProps?.inputRef}\n                        inputProps={{ ...inputProps, disabled }}\n                        dateValue={value}\n                        onDateChange={setDate}\n                    />\n                    <CalendarButton\n                        disabled={disabled}\n                        onClick={() => setCalendarIsVisible(!calendarIsVisible)}\n                        isOpen={calendarIsVisible}\n                    />\n                </div>\n                {calendarIsVisible && (\n                    <CalendarPortal position={calendarSettings?.position}>\n                        <Calendar\n                            ref={calendarRef}\n                            locale={locale}\n                            showWeekNumbers={calendarSettings?.showWeekNumbers}\n                            dateString={value}\n                            month={activeMonth}\n                            minDateString={limitations && limitations.minDate}\n                            maxDateString={limitations && limitations.maxDate}\n                            unavailableDates={limitations ? getInvalidDates(limitations) : undefined}\n                            onSelect={setDate}\n                            onClose={() => setCalendarIsVisible(false)}\n                            allowInvalidDateSelection={allowInvalidDateSelection}\n                            dayPickerProps={dayPickerProps}\n                            showYearSelector={showYearSelector}\n                            setFocusOnDateWhenOpened={setFocusOnDateWhenOpened}\n                        />\n                    </CalendarPortal>\n                )}\n            </div>\n        </DomEventContainer>\n    );\n};\nexport default Datepicker;\n","import dayjs from 'dayjs';\nimport DateHolidays, { Holiday } from 'date-holidays';\n\nconst norwegianHolidays = new DateHolidays('no');\n\nexport const getPublicHolidays = (from: Date, to: Date): Holiday[] => {\n    let days = [] as Holiday[];\n    const fromYear = from.getFullYear();\n    const toYear = to.getFullYear();\n    if (fromYear === toYear) {\n        days = norwegianHolidays.getHolidays(fromYear);\n    } else {\n        let Ã¥r = fromYear;\n        while (Ã¥r <= toYear) {\n            days = [...days, ...norwegianHolidays.getHolidays(Ã¥r)];\n            Ã¥r++;\n        }\n    }\n    const start = dayjs(from).subtract(24, 'hour');\n    const slutt = dayjs(to).add(24, 'hour');\n    return days\n        .filter((d) => d.type === 'public')\n        .map((d) => ({\n            ...d,\n            date: d.date,\n        }))\n        .filter((d) => dayjs(d.date).isAfter(start, 'day') && dayjs(d.date).isBefore(slutt, 'day'));\n};\n\nexport const getPublicHolidaysInMonth = (month: Date): Holiday[] => {\n    const days: Holiday[] = norwegianHolidays.getHolidays(month.getFullYear());\n    const from = dayjs(month).startOf('month');\n    const to = dayjs(month).endOf('month');\n    return days\n        .filter((d) => d.type === 'public')\n        .filter((d) => dayjs(d.date).isAfter(from, 'day') && dayjs(d.date).isBefore(to, 'day'));\n};\n\n/* Default - hente ut helligdager i default tidsrom */\nexport const holidays = getPublicHolidays(dayjs().subtract(4, 'year').toDate(), dayjs().add(4, 'year').toDate());\n\nexport const isPublicHoliday = (date: Date): string | undefined => {\n    const holiday = holidays.find((day) => dayjs(new Date(day.date)).isSame(date, 'day'));\n    return holiday ? holiday.name : undefined;\n};\n","import React, { useState } from 'react';\nimport dayjs from 'dayjs';\nimport Knapp from 'nav-frontend-knapper';\nimport { Checkbox } from 'nav-frontend-skjema';\nimport Datepicker, { DatepickerValue } from '../../datepicker/Datepicker';\nimport { DatepickerDateRange, DatepickerLocales } from '../../datepicker/types';\nimport { isISODateString } from '../../datepicker/types/typeGuards';\nimport { ISODateStringToUTCDate } from '../../datepicker/utils/dateFormatUtils';\nimport Box from '../components/box/Box';\nimport { holidays } from '../utils/holidays';\n\nconst renderDate = (dateString = ''): string => {\n    if (dateString === '') {\n        return '';\n    }\n    const date = ISODateStringToUTCDate(dateString);\n    return date ? dayjs(date).format('DD.MM.YYYY') : 'invalid date';\n};\n\nconst isPublicHoliday = (d: Date): boolean => {\n    return holidays.some((d2) => dayjs(d2.date).isSame(d, 'day'));\n};\n\nconst DatepickerExample: React.FunctionComponent = () => {\n    const [date, setDate] = useState<DatepickerValue>('');\n    const [showYearSelector, setShowYearSelector] = useState<boolean>(false);\n    const [showWeekNumbers, setShowWeekNumbers] = useState<boolean>(false);\n    const [showPublicHolidays, setShowPublicHolidays] = useState<boolean>(true);\n    const [initialMonth, setInitialMonth] = useState<Date | undefined>();\n    const [locale, setLocale] = useState<DatepickerLocales>('nb');\n\n    const takenRange: DatepickerDateRange = {\n        from: '2021-04-10',\n        to: '2021-04-11',\n    };\n\n    return (\n        <div>\n            <Box margin=\"xl\">\n                <label style={{ display: 'block', marginBottom: '.5rem' }} htmlFor=\"datovelger-input\">\n                    Choose date (format dd.mm.yyyy)\n                </label>\n                <Datepicker\n                    inputId=\"datovelger-input\"\n                    value={date}\n                    onChange={setDate}\n                    inputProps={{\n                        name: 'dateInput',\n                        'aria-invalid': date !== '' && isISODateString(date) === false,\n                    }}\n                    setFocusOnDateWhenOpened={true}\n                    locale={locale}\n                    calendarSettings={{ showWeekNumbers }}\n                    showYearSelector={showYearSelector}\n                    limitations={{\n                        weekendsNotSelectable: false,\n                        invalidDateRanges: [takenRange],\n                        minDate: '2000-04-03',\n                        maxDate: '2025-12-12',\n                    }}\n                    dayPickerProps={{\n                        initialMonth,\n                        modifiers: showPublicHolidays ? { isPublicHoliday } : undefined,\n                        onMonthChange: (month) => {\n                            console.log(month);\n                        },\n                    }}\n                />\n                <Box margin=\"l\">Chosen date: {renderDate(date)}</Box>\n                <Box margin=\"m\">\n                    <Knapp mini={true} onClick={() => setDate(dayjs(new Date()).format('YYYY-MM-DD'))}>\n                        Choose today\n                    </Knapp>\n                    -\n                    <Knapp mini={true} onClick={() => setDate('')}>\n                        Unselect date\n                    </Knapp>\n                    -\n                    <Knapp mini={true} onClick={() => setDate('abc')}>\n                        Set invalid formatted date\n                    </Knapp>\n                </Box>\n\n                <Box margin=\"xl\">\n                    Initial month: {initialMonth ? renderDate(dayjs(initialMonth).format('YYYY-MM-DD')) : undefined}\n                </Box>\n                <Box margin=\"m\">\n                    <Knapp mini={true} onClick={() => setInitialMonth(new Date())}>\n                        Choose this month\n                    </Knapp>\n                    -\n                    <Knapp mini={true} onClick={() => setInitialMonth(undefined)}>\n                        Undefined\n                    </Knapp>\n                    -\n                    <Knapp mini={true} onClick={() => setInitialMonth(new Date(2020, 0, 1))}>\n                        2020.01.01\n                    </Knapp>\n                </Box>\n\n                <Box margin=\"xl\">Locale: {locale}</Box>\n                <Box margin=\"m\">\n                    <Knapp mini={true} onClick={() => setLocale('nb')}>\n                        nb\n                    </Knapp>\n                    -\n                    <Knapp mini={true} onClick={() => setLocale('nn')}>\n                        nn\n                    </Knapp>\n                    -\n                    <Knapp mini={true} onClick={() => setLocale('en')}>\n                        en\n                    </Knapp>\n                </Box>\n\n                <Box margin=\"xl\">\n                    <fieldset>\n                        <legend>Presentation properties</legend>\n                        <div style={{ padding: '1rem' }}>\n                            <Box margin=\"none\">\n                                <Checkbox\n                                    checked={showYearSelector}\n                                    onChange={() => setShowYearSelector(!showYearSelector)}\n                                    label={\n                                        <>\n                                            <div>\n                                                <code>showYearSelector</code>:\n                                            </div>{' '}\n                                            Show dropdowns for year and month\n                                        </>\n                                    }\n                                />\n                            </Box>\n                            <Box margin=\"l\">\n                                <Checkbox\n                                    checked={showWeekNumbers}\n                                    onChange={() => setShowWeekNumbers(!showWeekNumbers)}\n                                    label={\n                                        <>\n                                            <div>\n                                                <code>calendarSettings.showWeekNumbers</code>\n                                            </div>\n                                            Toggle visibility on week numbers in calendar view\n                                        </>\n                                    }\n                                />\n                            </Box>\n                            <Box margin=\"l\">\n                                <Checkbox\n                                    checked={showPublicHolidays}\n                                    onChange={() => setShowPublicHolidays(!showPublicHolidays)}\n                                    label={\n                                        <>\n                                            <div>\n                                                <code>Custom - show holiday</code>\n                                            </div>\n                                            Possibility to highlight special days\n                                        </>\n                                    }\n                                />\n                            </Box>\n                        </div>\n                    </fieldset>\n                </Box>\n            </Box>\n        </div>\n    );\n};\nexport default DatepickerExample;\n","import React from 'react';\nimport { Ingress, Normaltekst } from 'nav-frontend-typografi';\nimport Lenke from 'nav-frontend-lenker';\nimport Box from './components/box/Box';\nimport PageIntro from './components/page-intro/PageIntro';\nimport DatepickerExample from './examples/DatepickerExample';\n\nconst Intro: React.FunctionComponent = () => (\n    <>\n        <PageIntro title=\"nav-datovelger\">\n            <h2>Simple datepicker based on react-day-picker</h2>\n            <Normaltekst>\n                <Lenke href=\"https://github.com/navikt/datovelger\">GitHub repository</Lenke>\n            </Normaltekst>\n        </PageIntro>\n        <Ingress style={{ marginBottom: '.5rem' }}>Example:</Ingress>\n        <Box>\n            <DatepickerExample />\n        </Box>\n    </>\n);\n\nexport default Intro;\n","import React from 'react';\nimport Intro from '../Intro';\n\nexport interface RouteConfig {\n    path: string;\n    title: string;\n    renderContent: () => React.ReactNode;\n}\n\nexport const routes: RouteConfig[] = [\n    {\n        path: 'frontpage',\n        title: 'Frontpage',\n        renderContent: function RenderContent() {\n            return <Intro />;\n        },\n    },\n];\n\nexport const getRouteConfig = (pathname: string): RouteConfig | undefined => {\n    return routes.find((f) => isActiveRoute(f.path, pathname));\n};\n\nexport const isActiveRoute = (path: string, pathname: string): boolean => {\n    return pathname.indexOf(path) >= 0;\n};\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport 'nav-frontend-lenker-style';\nimport { isActiveRoute, routes } from '../../config/routeConfig';\nimport bemUtils from '../../utils/bemUtils';\n\nconst lenkeBem = bemUtils('lenke');\n\nconst LeftMenu: React.FunctionComponent = () => {\n    const {\n        location: { pathname },\n    } = useHistory();\n    return (\n        <div className=\"leftMenu\">\n            {routes.map((route) => (\n                <Link\n                    key={route.path}\n                    to={route.path}\n                    className={lenkeBem.classNames(\n                        lenkeBem.block,\n                        lenkeBem.modifierConditional('active', isActiveRoute(route.path, pathname))\n                    )}>\n                    {route.title}\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default LeftMenu;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport LeftMenu from './components/left-menu/LeftMenu';\nimport { getRouteConfig } from './config/routeConfig';\nimport Intro from './Intro';\n\nconst DevContent: React.FunctionComponent = () => {\n    const history = useHistory();\n    const {\n        location: { pathname },\n    } = history;\n    const routeConfig = getRouteConfig(pathname);\n    return (\n        <>\n            <aside className=\"asideContent\">\n                <LeftMenu />\n            </aside>\n            <article style={{ maxWidth: '1000px' }} className=\"mainContent\">\n                {routeConfig ? routeConfig.renderContent() : <Intro />}\n            </article>\n        </>\n    );\n};\n\nexport default DevContent;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport NAVLogo from './components/svg/NAVLogo';\nimport DevContent from './DevContent';\nimport './styles/dev.less';\n\nconst DevPage: React.FunctionComponent = () => {\n    return (\n        <main className=\"devPage\">\n            <header className=\"header\">\n                <span className=\"navLogo\">\n                    <NAVLogo />\n                </span>\n                <span className=\"header__title\">\n                    <Systemtittel>nav-datovelger</Systemtittel>\n                </span>\n            </header>\n            <div className=\"contentWrapper\">\n                <BrowserRouter>\n                    <DevContent />\n                </BrowserRouter>\n            </div>\n        </main>\n    );\n};\n\nexport default DevPage;\n","import React from 'react';\nimport 'nav-frontend-skjema-style';\nimport { Normaltekst } from 'nav-frontend-typografi';\nimport DevPage from './dev/DevPage';\nimport './dev/styles/globalStyles.less';\n\nconst App: React.FC = () => {\n    return (\n        <Normaltekst tag=\"div\">\n            <DevPage />\n        </Normaltekst>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport App from './App';\n\nModal.setAppElement('#root');\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}